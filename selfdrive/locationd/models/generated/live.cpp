#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4100496910655232877) {
   out_4100496910655232877[0] = 0;
   out_4100496910655232877[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4100496910655232877[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4100496910655232877[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4100496910655232877[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4100496910655232877[5] = -sin(in_vec[1]);
   out_4100496910655232877[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4100496910655232877[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4100496910655232877[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4100496910655232877[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4100496910655232877[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4100496910655232877[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4100496910655232877[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4100496910655232877[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4100496910655232877[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4100496910655232877[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4100496910655232877[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4100496910655232877[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5392627368994945959) {
   out_5392627368994945959[0] = delta_x[0] + nom_x[0];
   out_5392627368994945959[1] = delta_x[1] + nom_x[1];
   out_5392627368994945959[2] = delta_x[2] + nom_x[2];
   out_5392627368994945959[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5392627368994945959[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5392627368994945959[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5392627368994945959[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5392627368994945959[7] = delta_x[6] + nom_x[7];
   out_5392627368994945959[8] = delta_x[7] + nom_x[8];
   out_5392627368994945959[9] = delta_x[8] + nom_x[9];
   out_5392627368994945959[10] = delta_x[9] + nom_x[10];
   out_5392627368994945959[11] = delta_x[10] + nom_x[11];
   out_5392627368994945959[12] = delta_x[11] + nom_x[12];
   out_5392627368994945959[13] = delta_x[12] + nom_x[13];
   out_5392627368994945959[14] = delta_x[13] + nom_x[14];
   out_5392627368994945959[15] = delta_x[14] + nom_x[15];
   out_5392627368994945959[16] = delta_x[15] + nom_x[16];
   out_5392627368994945959[17] = delta_x[16] + nom_x[17];
   out_5392627368994945959[18] = delta_x[17] + nom_x[18];
   out_5392627368994945959[19] = delta_x[18] + nom_x[19];
   out_5392627368994945959[20] = delta_x[19] + nom_x[20];
   out_5392627368994945959[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2141277271085920178) {
   out_2141277271085920178[0] = -nom_x[0] + true_x[0];
   out_2141277271085920178[1] = -nom_x[1] + true_x[1];
   out_2141277271085920178[2] = -nom_x[2] + true_x[2];
   out_2141277271085920178[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2141277271085920178[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2141277271085920178[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2141277271085920178[6] = -nom_x[7] + true_x[7];
   out_2141277271085920178[7] = -nom_x[8] + true_x[8];
   out_2141277271085920178[8] = -nom_x[9] + true_x[9];
   out_2141277271085920178[9] = -nom_x[10] + true_x[10];
   out_2141277271085920178[10] = -nom_x[11] + true_x[11];
   out_2141277271085920178[11] = -nom_x[12] + true_x[12];
   out_2141277271085920178[12] = -nom_x[13] + true_x[13];
   out_2141277271085920178[13] = -nom_x[14] + true_x[14];
   out_2141277271085920178[14] = -nom_x[15] + true_x[15];
   out_2141277271085920178[15] = -nom_x[16] + true_x[16];
   out_2141277271085920178[16] = -nom_x[17] + true_x[17];
   out_2141277271085920178[17] = -nom_x[18] + true_x[18];
   out_2141277271085920178[18] = -nom_x[19] + true_x[19];
   out_2141277271085920178[19] = -nom_x[20] + true_x[20];
   out_2141277271085920178[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5237530958733850901) {
   out_5237530958733850901[0] = 1.0;
   out_5237530958733850901[1] = 0;
   out_5237530958733850901[2] = 0;
   out_5237530958733850901[3] = 0;
   out_5237530958733850901[4] = 0;
   out_5237530958733850901[5] = 0;
   out_5237530958733850901[6] = 0;
   out_5237530958733850901[7] = 0;
   out_5237530958733850901[8] = 0;
   out_5237530958733850901[9] = 0;
   out_5237530958733850901[10] = 0;
   out_5237530958733850901[11] = 0;
   out_5237530958733850901[12] = 0;
   out_5237530958733850901[13] = 0;
   out_5237530958733850901[14] = 0;
   out_5237530958733850901[15] = 0;
   out_5237530958733850901[16] = 0;
   out_5237530958733850901[17] = 0;
   out_5237530958733850901[18] = 0;
   out_5237530958733850901[19] = 0;
   out_5237530958733850901[20] = 0;
   out_5237530958733850901[21] = 0;
   out_5237530958733850901[22] = 1.0;
   out_5237530958733850901[23] = 0;
   out_5237530958733850901[24] = 0;
   out_5237530958733850901[25] = 0;
   out_5237530958733850901[26] = 0;
   out_5237530958733850901[27] = 0;
   out_5237530958733850901[28] = 0;
   out_5237530958733850901[29] = 0;
   out_5237530958733850901[30] = 0;
   out_5237530958733850901[31] = 0;
   out_5237530958733850901[32] = 0;
   out_5237530958733850901[33] = 0;
   out_5237530958733850901[34] = 0;
   out_5237530958733850901[35] = 0;
   out_5237530958733850901[36] = 0;
   out_5237530958733850901[37] = 0;
   out_5237530958733850901[38] = 0;
   out_5237530958733850901[39] = 0;
   out_5237530958733850901[40] = 0;
   out_5237530958733850901[41] = 0;
   out_5237530958733850901[42] = 0;
   out_5237530958733850901[43] = 0;
   out_5237530958733850901[44] = 1.0;
   out_5237530958733850901[45] = 0;
   out_5237530958733850901[46] = 0;
   out_5237530958733850901[47] = 0;
   out_5237530958733850901[48] = 0;
   out_5237530958733850901[49] = 0;
   out_5237530958733850901[50] = 0;
   out_5237530958733850901[51] = 0;
   out_5237530958733850901[52] = 0;
   out_5237530958733850901[53] = 0;
   out_5237530958733850901[54] = 0;
   out_5237530958733850901[55] = 0;
   out_5237530958733850901[56] = 0;
   out_5237530958733850901[57] = 0;
   out_5237530958733850901[58] = 0;
   out_5237530958733850901[59] = 0;
   out_5237530958733850901[60] = 0;
   out_5237530958733850901[61] = 0;
   out_5237530958733850901[62] = 0;
   out_5237530958733850901[63] = 0;
   out_5237530958733850901[64] = 0;
   out_5237530958733850901[65] = 0;
   out_5237530958733850901[66] = -0.5*state[4];
   out_5237530958733850901[67] = -0.5*state[5];
   out_5237530958733850901[68] = -0.5*state[6];
   out_5237530958733850901[69] = 0;
   out_5237530958733850901[70] = 0;
   out_5237530958733850901[71] = 0;
   out_5237530958733850901[72] = 0;
   out_5237530958733850901[73] = 0;
   out_5237530958733850901[74] = 0;
   out_5237530958733850901[75] = 0;
   out_5237530958733850901[76] = 0;
   out_5237530958733850901[77] = 0;
   out_5237530958733850901[78] = 0;
   out_5237530958733850901[79] = 0;
   out_5237530958733850901[80] = 0;
   out_5237530958733850901[81] = 0;
   out_5237530958733850901[82] = 0;
   out_5237530958733850901[83] = 0;
   out_5237530958733850901[84] = 0;
   out_5237530958733850901[85] = 0;
   out_5237530958733850901[86] = 0;
   out_5237530958733850901[87] = 0.5*state[3];
   out_5237530958733850901[88] = 0.5*state[6];
   out_5237530958733850901[89] = -0.5*state[5];
   out_5237530958733850901[90] = 0;
   out_5237530958733850901[91] = 0;
   out_5237530958733850901[92] = 0;
   out_5237530958733850901[93] = 0;
   out_5237530958733850901[94] = 0;
   out_5237530958733850901[95] = 0;
   out_5237530958733850901[96] = 0;
   out_5237530958733850901[97] = 0;
   out_5237530958733850901[98] = 0;
   out_5237530958733850901[99] = 0;
   out_5237530958733850901[100] = 0;
   out_5237530958733850901[101] = 0;
   out_5237530958733850901[102] = 0;
   out_5237530958733850901[103] = 0;
   out_5237530958733850901[104] = 0;
   out_5237530958733850901[105] = 0;
   out_5237530958733850901[106] = 0;
   out_5237530958733850901[107] = 0;
   out_5237530958733850901[108] = -0.5*state[6];
   out_5237530958733850901[109] = 0.5*state[3];
   out_5237530958733850901[110] = 0.5*state[4];
   out_5237530958733850901[111] = 0;
   out_5237530958733850901[112] = 0;
   out_5237530958733850901[113] = 0;
   out_5237530958733850901[114] = 0;
   out_5237530958733850901[115] = 0;
   out_5237530958733850901[116] = 0;
   out_5237530958733850901[117] = 0;
   out_5237530958733850901[118] = 0;
   out_5237530958733850901[119] = 0;
   out_5237530958733850901[120] = 0;
   out_5237530958733850901[121] = 0;
   out_5237530958733850901[122] = 0;
   out_5237530958733850901[123] = 0;
   out_5237530958733850901[124] = 0;
   out_5237530958733850901[125] = 0;
   out_5237530958733850901[126] = 0;
   out_5237530958733850901[127] = 0;
   out_5237530958733850901[128] = 0;
   out_5237530958733850901[129] = 0.5*state[5];
   out_5237530958733850901[130] = -0.5*state[4];
   out_5237530958733850901[131] = 0.5*state[3];
   out_5237530958733850901[132] = 0;
   out_5237530958733850901[133] = 0;
   out_5237530958733850901[134] = 0;
   out_5237530958733850901[135] = 0;
   out_5237530958733850901[136] = 0;
   out_5237530958733850901[137] = 0;
   out_5237530958733850901[138] = 0;
   out_5237530958733850901[139] = 0;
   out_5237530958733850901[140] = 0;
   out_5237530958733850901[141] = 0;
   out_5237530958733850901[142] = 0;
   out_5237530958733850901[143] = 0;
   out_5237530958733850901[144] = 0;
   out_5237530958733850901[145] = 0;
   out_5237530958733850901[146] = 0;
   out_5237530958733850901[147] = 0;
   out_5237530958733850901[148] = 0;
   out_5237530958733850901[149] = 0;
   out_5237530958733850901[150] = 0;
   out_5237530958733850901[151] = 0;
   out_5237530958733850901[152] = 0;
   out_5237530958733850901[153] = 1.0;
   out_5237530958733850901[154] = 0;
   out_5237530958733850901[155] = 0;
   out_5237530958733850901[156] = 0;
   out_5237530958733850901[157] = 0;
   out_5237530958733850901[158] = 0;
   out_5237530958733850901[159] = 0;
   out_5237530958733850901[160] = 0;
   out_5237530958733850901[161] = 0;
   out_5237530958733850901[162] = 0;
   out_5237530958733850901[163] = 0;
   out_5237530958733850901[164] = 0;
   out_5237530958733850901[165] = 0;
   out_5237530958733850901[166] = 0;
   out_5237530958733850901[167] = 0;
   out_5237530958733850901[168] = 0;
   out_5237530958733850901[169] = 0;
   out_5237530958733850901[170] = 0;
   out_5237530958733850901[171] = 0;
   out_5237530958733850901[172] = 0;
   out_5237530958733850901[173] = 0;
   out_5237530958733850901[174] = 0;
   out_5237530958733850901[175] = 1.0;
   out_5237530958733850901[176] = 0;
   out_5237530958733850901[177] = 0;
   out_5237530958733850901[178] = 0;
   out_5237530958733850901[179] = 0;
   out_5237530958733850901[180] = 0;
   out_5237530958733850901[181] = 0;
   out_5237530958733850901[182] = 0;
   out_5237530958733850901[183] = 0;
   out_5237530958733850901[184] = 0;
   out_5237530958733850901[185] = 0;
   out_5237530958733850901[186] = 0;
   out_5237530958733850901[187] = 0;
   out_5237530958733850901[188] = 0;
   out_5237530958733850901[189] = 0;
   out_5237530958733850901[190] = 0;
   out_5237530958733850901[191] = 0;
   out_5237530958733850901[192] = 0;
   out_5237530958733850901[193] = 0;
   out_5237530958733850901[194] = 0;
   out_5237530958733850901[195] = 0;
   out_5237530958733850901[196] = 0;
   out_5237530958733850901[197] = 1.0;
   out_5237530958733850901[198] = 0;
   out_5237530958733850901[199] = 0;
   out_5237530958733850901[200] = 0;
   out_5237530958733850901[201] = 0;
   out_5237530958733850901[202] = 0;
   out_5237530958733850901[203] = 0;
   out_5237530958733850901[204] = 0;
   out_5237530958733850901[205] = 0;
   out_5237530958733850901[206] = 0;
   out_5237530958733850901[207] = 0;
   out_5237530958733850901[208] = 0;
   out_5237530958733850901[209] = 0;
   out_5237530958733850901[210] = 0;
   out_5237530958733850901[211] = 0;
   out_5237530958733850901[212] = 0;
   out_5237530958733850901[213] = 0;
   out_5237530958733850901[214] = 0;
   out_5237530958733850901[215] = 0;
   out_5237530958733850901[216] = 0;
   out_5237530958733850901[217] = 0;
   out_5237530958733850901[218] = 0;
   out_5237530958733850901[219] = 1.0;
   out_5237530958733850901[220] = 0;
   out_5237530958733850901[221] = 0;
   out_5237530958733850901[222] = 0;
   out_5237530958733850901[223] = 0;
   out_5237530958733850901[224] = 0;
   out_5237530958733850901[225] = 0;
   out_5237530958733850901[226] = 0;
   out_5237530958733850901[227] = 0;
   out_5237530958733850901[228] = 0;
   out_5237530958733850901[229] = 0;
   out_5237530958733850901[230] = 0;
   out_5237530958733850901[231] = 0;
   out_5237530958733850901[232] = 0;
   out_5237530958733850901[233] = 0;
   out_5237530958733850901[234] = 0;
   out_5237530958733850901[235] = 0;
   out_5237530958733850901[236] = 0;
   out_5237530958733850901[237] = 0;
   out_5237530958733850901[238] = 0;
   out_5237530958733850901[239] = 0;
   out_5237530958733850901[240] = 0;
   out_5237530958733850901[241] = 1.0;
   out_5237530958733850901[242] = 0;
   out_5237530958733850901[243] = 0;
   out_5237530958733850901[244] = 0;
   out_5237530958733850901[245] = 0;
   out_5237530958733850901[246] = 0;
   out_5237530958733850901[247] = 0;
   out_5237530958733850901[248] = 0;
   out_5237530958733850901[249] = 0;
   out_5237530958733850901[250] = 0;
   out_5237530958733850901[251] = 0;
   out_5237530958733850901[252] = 0;
   out_5237530958733850901[253] = 0;
   out_5237530958733850901[254] = 0;
   out_5237530958733850901[255] = 0;
   out_5237530958733850901[256] = 0;
   out_5237530958733850901[257] = 0;
   out_5237530958733850901[258] = 0;
   out_5237530958733850901[259] = 0;
   out_5237530958733850901[260] = 0;
   out_5237530958733850901[261] = 0;
   out_5237530958733850901[262] = 0;
   out_5237530958733850901[263] = 1.0;
   out_5237530958733850901[264] = 0;
   out_5237530958733850901[265] = 0;
   out_5237530958733850901[266] = 0;
   out_5237530958733850901[267] = 0;
   out_5237530958733850901[268] = 0;
   out_5237530958733850901[269] = 0;
   out_5237530958733850901[270] = 0;
   out_5237530958733850901[271] = 0;
   out_5237530958733850901[272] = 0;
   out_5237530958733850901[273] = 0;
   out_5237530958733850901[274] = 0;
   out_5237530958733850901[275] = 0;
   out_5237530958733850901[276] = 0;
   out_5237530958733850901[277] = 0;
   out_5237530958733850901[278] = 0;
   out_5237530958733850901[279] = 0;
   out_5237530958733850901[280] = 0;
   out_5237530958733850901[281] = 0;
   out_5237530958733850901[282] = 0;
   out_5237530958733850901[283] = 0;
   out_5237530958733850901[284] = 0;
   out_5237530958733850901[285] = 1.0;
   out_5237530958733850901[286] = 0;
   out_5237530958733850901[287] = 0;
   out_5237530958733850901[288] = 0;
   out_5237530958733850901[289] = 0;
   out_5237530958733850901[290] = 0;
   out_5237530958733850901[291] = 0;
   out_5237530958733850901[292] = 0;
   out_5237530958733850901[293] = 0;
   out_5237530958733850901[294] = 0;
   out_5237530958733850901[295] = 0;
   out_5237530958733850901[296] = 0;
   out_5237530958733850901[297] = 0;
   out_5237530958733850901[298] = 0;
   out_5237530958733850901[299] = 0;
   out_5237530958733850901[300] = 0;
   out_5237530958733850901[301] = 0;
   out_5237530958733850901[302] = 0;
   out_5237530958733850901[303] = 0;
   out_5237530958733850901[304] = 0;
   out_5237530958733850901[305] = 0;
   out_5237530958733850901[306] = 0;
   out_5237530958733850901[307] = 1.0;
   out_5237530958733850901[308] = 0;
   out_5237530958733850901[309] = 0;
   out_5237530958733850901[310] = 0;
   out_5237530958733850901[311] = 0;
   out_5237530958733850901[312] = 0;
   out_5237530958733850901[313] = 0;
   out_5237530958733850901[314] = 0;
   out_5237530958733850901[315] = 0;
   out_5237530958733850901[316] = 0;
   out_5237530958733850901[317] = 0;
   out_5237530958733850901[318] = 0;
   out_5237530958733850901[319] = 0;
   out_5237530958733850901[320] = 0;
   out_5237530958733850901[321] = 0;
   out_5237530958733850901[322] = 0;
   out_5237530958733850901[323] = 0;
   out_5237530958733850901[324] = 0;
   out_5237530958733850901[325] = 0;
   out_5237530958733850901[326] = 0;
   out_5237530958733850901[327] = 0;
   out_5237530958733850901[328] = 0;
   out_5237530958733850901[329] = 1.0;
   out_5237530958733850901[330] = 0;
   out_5237530958733850901[331] = 0;
   out_5237530958733850901[332] = 0;
   out_5237530958733850901[333] = 0;
   out_5237530958733850901[334] = 0;
   out_5237530958733850901[335] = 0;
   out_5237530958733850901[336] = 0;
   out_5237530958733850901[337] = 0;
   out_5237530958733850901[338] = 0;
   out_5237530958733850901[339] = 0;
   out_5237530958733850901[340] = 0;
   out_5237530958733850901[341] = 0;
   out_5237530958733850901[342] = 0;
   out_5237530958733850901[343] = 0;
   out_5237530958733850901[344] = 0;
   out_5237530958733850901[345] = 0;
   out_5237530958733850901[346] = 0;
   out_5237530958733850901[347] = 0;
   out_5237530958733850901[348] = 0;
   out_5237530958733850901[349] = 0;
   out_5237530958733850901[350] = 0;
   out_5237530958733850901[351] = 1.0;
   out_5237530958733850901[352] = 0;
   out_5237530958733850901[353] = 0;
   out_5237530958733850901[354] = 0;
   out_5237530958733850901[355] = 0;
   out_5237530958733850901[356] = 0;
   out_5237530958733850901[357] = 0;
   out_5237530958733850901[358] = 0;
   out_5237530958733850901[359] = 0;
   out_5237530958733850901[360] = 0;
   out_5237530958733850901[361] = 0;
   out_5237530958733850901[362] = 0;
   out_5237530958733850901[363] = 0;
   out_5237530958733850901[364] = 0;
   out_5237530958733850901[365] = 0;
   out_5237530958733850901[366] = 0;
   out_5237530958733850901[367] = 0;
   out_5237530958733850901[368] = 0;
   out_5237530958733850901[369] = 0;
   out_5237530958733850901[370] = 0;
   out_5237530958733850901[371] = 0;
   out_5237530958733850901[372] = 0;
   out_5237530958733850901[373] = 1.0;
   out_5237530958733850901[374] = 0;
   out_5237530958733850901[375] = 0;
   out_5237530958733850901[376] = 0;
   out_5237530958733850901[377] = 0;
   out_5237530958733850901[378] = 0;
   out_5237530958733850901[379] = 0;
   out_5237530958733850901[380] = 0;
   out_5237530958733850901[381] = 0;
   out_5237530958733850901[382] = 0;
   out_5237530958733850901[383] = 0;
   out_5237530958733850901[384] = 0;
   out_5237530958733850901[385] = 0;
   out_5237530958733850901[386] = 0;
   out_5237530958733850901[387] = 0;
   out_5237530958733850901[388] = 0;
   out_5237530958733850901[389] = 0;
   out_5237530958733850901[390] = 0;
   out_5237530958733850901[391] = 0;
   out_5237530958733850901[392] = 0;
   out_5237530958733850901[393] = 0;
   out_5237530958733850901[394] = 0;
   out_5237530958733850901[395] = 1.0;
   out_5237530958733850901[396] = 0;
   out_5237530958733850901[397] = 0;
   out_5237530958733850901[398] = 0;
   out_5237530958733850901[399] = 0;
   out_5237530958733850901[400] = 0;
   out_5237530958733850901[401] = 0;
   out_5237530958733850901[402] = 0;
   out_5237530958733850901[403] = 0;
   out_5237530958733850901[404] = 0;
   out_5237530958733850901[405] = 0;
   out_5237530958733850901[406] = 0;
   out_5237530958733850901[407] = 0;
   out_5237530958733850901[408] = 0;
   out_5237530958733850901[409] = 0;
   out_5237530958733850901[410] = 0;
   out_5237530958733850901[411] = 0;
   out_5237530958733850901[412] = 0;
   out_5237530958733850901[413] = 0;
   out_5237530958733850901[414] = 0;
   out_5237530958733850901[415] = 0;
   out_5237530958733850901[416] = 0;
   out_5237530958733850901[417] = 1.0;
   out_5237530958733850901[418] = 0;
   out_5237530958733850901[419] = 0;
   out_5237530958733850901[420] = 0;
   out_5237530958733850901[421] = 0;
   out_5237530958733850901[422] = 0;
   out_5237530958733850901[423] = 0;
   out_5237530958733850901[424] = 0;
   out_5237530958733850901[425] = 0;
   out_5237530958733850901[426] = 0;
   out_5237530958733850901[427] = 0;
   out_5237530958733850901[428] = 0;
   out_5237530958733850901[429] = 0;
   out_5237530958733850901[430] = 0;
   out_5237530958733850901[431] = 0;
   out_5237530958733850901[432] = 0;
   out_5237530958733850901[433] = 0;
   out_5237530958733850901[434] = 0;
   out_5237530958733850901[435] = 0;
   out_5237530958733850901[436] = 0;
   out_5237530958733850901[437] = 0;
   out_5237530958733850901[438] = 0;
   out_5237530958733850901[439] = 1.0;
   out_5237530958733850901[440] = 0;
   out_5237530958733850901[441] = 0;
   out_5237530958733850901[442] = 0;
   out_5237530958733850901[443] = 0;
   out_5237530958733850901[444] = 0;
   out_5237530958733850901[445] = 0;
   out_5237530958733850901[446] = 0;
   out_5237530958733850901[447] = 0;
   out_5237530958733850901[448] = 0;
   out_5237530958733850901[449] = 0;
   out_5237530958733850901[450] = 0;
   out_5237530958733850901[451] = 0;
   out_5237530958733850901[452] = 0;
   out_5237530958733850901[453] = 0;
   out_5237530958733850901[454] = 0;
   out_5237530958733850901[455] = 0;
   out_5237530958733850901[456] = 0;
   out_5237530958733850901[457] = 0;
   out_5237530958733850901[458] = 0;
   out_5237530958733850901[459] = 0;
   out_5237530958733850901[460] = 0;
   out_5237530958733850901[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3661643488610007850) {
   out_3661643488610007850[0] = dt*state[7] + state[0];
   out_3661643488610007850[1] = dt*state[8] + state[1];
   out_3661643488610007850[2] = dt*state[9] + state[2];
   out_3661643488610007850[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3661643488610007850[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3661643488610007850[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3661643488610007850[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3661643488610007850[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3661643488610007850[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3661643488610007850[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3661643488610007850[10] = state[10];
   out_3661643488610007850[11] = state[11];
   out_3661643488610007850[12] = state[12];
   out_3661643488610007850[13] = state[13];
   out_3661643488610007850[14] = state[14];
   out_3661643488610007850[15] = state[15];
   out_3661643488610007850[16] = state[16];
   out_3661643488610007850[17] = state[17];
   out_3661643488610007850[18] = state[18];
   out_3661643488610007850[19] = state[19];
   out_3661643488610007850[20] = state[20];
   out_3661643488610007850[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1859944115140833756) {
   out_1859944115140833756[0] = 1;
   out_1859944115140833756[1] = 0;
   out_1859944115140833756[2] = 0;
   out_1859944115140833756[3] = 0;
   out_1859944115140833756[4] = 0;
   out_1859944115140833756[5] = 0;
   out_1859944115140833756[6] = dt;
   out_1859944115140833756[7] = 0;
   out_1859944115140833756[8] = 0;
   out_1859944115140833756[9] = 0;
   out_1859944115140833756[10] = 0;
   out_1859944115140833756[11] = 0;
   out_1859944115140833756[12] = 0;
   out_1859944115140833756[13] = 0;
   out_1859944115140833756[14] = 0;
   out_1859944115140833756[15] = 0;
   out_1859944115140833756[16] = 0;
   out_1859944115140833756[17] = 0;
   out_1859944115140833756[18] = 0;
   out_1859944115140833756[19] = 0;
   out_1859944115140833756[20] = 0;
   out_1859944115140833756[21] = 0;
   out_1859944115140833756[22] = 1;
   out_1859944115140833756[23] = 0;
   out_1859944115140833756[24] = 0;
   out_1859944115140833756[25] = 0;
   out_1859944115140833756[26] = 0;
   out_1859944115140833756[27] = 0;
   out_1859944115140833756[28] = dt;
   out_1859944115140833756[29] = 0;
   out_1859944115140833756[30] = 0;
   out_1859944115140833756[31] = 0;
   out_1859944115140833756[32] = 0;
   out_1859944115140833756[33] = 0;
   out_1859944115140833756[34] = 0;
   out_1859944115140833756[35] = 0;
   out_1859944115140833756[36] = 0;
   out_1859944115140833756[37] = 0;
   out_1859944115140833756[38] = 0;
   out_1859944115140833756[39] = 0;
   out_1859944115140833756[40] = 0;
   out_1859944115140833756[41] = 0;
   out_1859944115140833756[42] = 0;
   out_1859944115140833756[43] = 0;
   out_1859944115140833756[44] = 1;
   out_1859944115140833756[45] = 0;
   out_1859944115140833756[46] = 0;
   out_1859944115140833756[47] = 0;
   out_1859944115140833756[48] = 0;
   out_1859944115140833756[49] = 0;
   out_1859944115140833756[50] = dt;
   out_1859944115140833756[51] = 0;
   out_1859944115140833756[52] = 0;
   out_1859944115140833756[53] = 0;
   out_1859944115140833756[54] = 0;
   out_1859944115140833756[55] = 0;
   out_1859944115140833756[56] = 0;
   out_1859944115140833756[57] = 0;
   out_1859944115140833756[58] = 0;
   out_1859944115140833756[59] = 0;
   out_1859944115140833756[60] = 0;
   out_1859944115140833756[61] = 0;
   out_1859944115140833756[62] = 0;
   out_1859944115140833756[63] = 0;
   out_1859944115140833756[64] = 0;
   out_1859944115140833756[65] = 0;
   out_1859944115140833756[66] = 1;
   out_1859944115140833756[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1859944115140833756[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1859944115140833756[69] = 0;
   out_1859944115140833756[70] = 0;
   out_1859944115140833756[71] = 0;
   out_1859944115140833756[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1859944115140833756[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1859944115140833756[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1859944115140833756[75] = 0;
   out_1859944115140833756[76] = 0;
   out_1859944115140833756[77] = 0;
   out_1859944115140833756[78] = 0;
   out_1859944115140833756[79] = 0;
   out_1859944115140833756[80] = 0;
   out_1859944115140833756[81] = 0;
   out_1859944115140833756[82] = 0;
   out_1859944115140833756[83] = 0;
   out_1859944115140833756[84] = 0;
   out_1859944115140833756[85] = 0;
   out_1859944115140833756[86] = 0;
   out_1859944115140833756[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1859944115140833756[88] = 1;
   out_1859944115140833756[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1859944115140833756[90] = 0;
   out_1859944115140833756[91] = 0;
   out_1859944115140833756[92] = 0;
   out_1859944115140833756[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1859944115140833756[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1859944115140833756[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1859944115140833756[96] = 0;
   out_1859944115140833756[97] = 0;
   out_1859944115140833756[98] = 0;
   out_1859944115140833756[99] = 0;
   out_1859944115140833756[100] = 0;
   out_1859944115140833756[101] = 0;
   out_1859944115140833756[102] = 0;
   out_1859944115140833756[103] = 0;
   out_1859944115140833756[104] = 0;
   out_1859944115140833756[105] = 0;
   out_1859944115140833756[106] = 0;
   out_1859944115140833756[107] = 0;
   out_1859944115140833756[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1859944115140833756[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1859944115140833756[110] = 1;
   out_1859944115140833756[111] = 0;
   out_1859944115140833756[112] = 0;
   out_1859944115140833756[113] = 0;
   out_1859944115140833756[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1859944115140833756[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1859944115140833756[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1859944115140833756[117] = 0;
   out_1859944115140833756[118] = 0;
   out_1859944115140833756[119] = 0;
   out_1859944115140833756[120] = 0;
   out_1859944115140833756[121] = 0;
   out_1859944115140833756[122] = 0;
   out_1859944115140833756[123] = 0;
   out_1859944115140833756[124] = 0;
   out_1859944115140833756[125] = 0;
   out_1859944115140833756[126] = 0;
   out_1859944115140833756[127] = 0;
   out_1859944115140833756[128] = 0;
   out_1859944115140833756[129] = 0;
   out_1859944115140833756[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1859944115140833756[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1859944115140833756[132] = 1;
   out_1859944115140833756[133] = 0;
   out_1859944115140833756[134] = 0;
   out_1859944115140833756[135] = 0;
   out_1859944115140833756[136] = 0;
   out_1859944115140833756[137] = 0;
   out_1859944115140833756[138] = 0;
   out_1859944115140833756[139] = 0;
   out_1859944115140833756[140] = 0;
   out_1859944115140833756[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1859944115140833756[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1859944115140833756[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1859944115140833756[144] = 0;
   out_1859944115140833756[145] = 0;
   out_1859944115140833756[146] = 0;
   out_1859944115140833756[147] = 0;
   out_1859944115140833756[148] = 0;
   out_1859944115140833756[149] = 0;
   out_1859944115140833756[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1859944115140833756[151] = 0;
   out_1859944115140833756[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1859944115140833756[153] = 0;
   out_1859944115140833756[154] = 1;
   out_1859944115140833756[155] = 0;
   out_1859944115140833756[156] = 0;
   out_1859944115140833756[157] = 0;
   out_1859944115140833756[158] = 0;
   out_1859944115140833756[159] = 0;
   out_1859944115140833756[160] = 0;
   out_1859944115140833756[161] = 0;
   out_1859944115140833756[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1859944115140833756[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1859944115140833756[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1859944115140833756[165] = 0;
   out_1859944115140833756[166] = 0;
   out_1859944115140833756[167] = 0;
   out_1859944115140833756[168] = 0;
   out_1859944115140833756[169] = 0;
   out_1859944115140833756[170] = 0;
   out_1859944115140833756[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1859944115140833756[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1859944115140833756[173] = 0;
   out_1859944115140833756[174] = 0;
   out_1859944115140833756[175] = 0;
   out_1859944115140833756[176] = 1;
   out_1859944115140833756[177] = 0;
   out_1859944115140833756[178] = 0;
   out_1859944115140833756[179] = 0;
   out_1859944115140833756[180] = 0;
   out_1859944115140833756[181] = 0;
   out_1859944115140833756[182] = 0;
   out_1859944115140833756[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1859944115140833756[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1859944115140833756[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1859944115140833756[186] = 0;
   out_1859944115140833756[187] = 0;
   out_1859944115140833756[188] = 0;
   out_1859944115140833756[189] = 0;
   out_1859944115140833756[190] = 0;
   out_1859944115140833756[191] = 0;
   out_1859944115140833756[192] = 0;
   out_1859944115140833756[193] = 0;
   out_1859944115140833756[194] = 0;
   out_1859944115140833756[195] = 0;
   out_1859944115140833756[196] = 0;
   out_1859944115140833756[197] = 0;
   out_1859944115140833756[198] = 1;
   out_1859944115140833756[199] = 0;
   out_1859944115140833756[200] = 0;
   out_1859944115140833756[201] = 0;
   out_1859944115140833756[202] = 0;
   out_1859944115140833756[203] = 0;
   out_1859944115140833756[204] = 0;
   out_1859944115140833756[205] = 0;
   out_1859944115140833756[206] = 0;
   out_1859944115140833756[207] = 0;
   out_1859944115140833756[208] = 0;
   out_1859944115140833756[209] = 0;
   out_1859944115140833756[210] = 0;
   out_1859944115140833756[211] = 0;
   out_1859944115140833756[212] = 0;
   out_1859944115140833756[213] = 0;
   out_1859944115140833756[214] = 0;
   out_1859944115140833756[215] = 0;
   out_1859944115140833756[216] = 0;
   out_1859944115140833756[217] = 0;
   out_1859944115140833756[218] = 0;
   out_1859944115140833756[219] = 0;
   out_1859944115140833756[220] = 1;
   out_1859944115140833756[221] = 0;
   out_1859944115140833756[222] = 0;
   out_1859944115140833756[223] = 0;
   out_1859944115140833756[224] = 0;
   out_1859944115140833756[225] = 0;
   out_1859944115140833756[226] = 0;
   out_1859944115140833756[227] = 0;
   out_1859944115140833756[228] = 0;
   out_1859944115140833756[229] = 0;
   out_1859944115140833756[230] = 0;
   out_1859944115140833756[231] = 0;
   out_1859944115140833756[232] = 0;
   out_1859944115140833756[233] = 0;
   out_1859944115140833756[234] = 0;
   out_1859944115140833756[235] = 0;
   out_1859944115140833756[236] = 0;
   out_1859944115140833756[237] = 0;
   out_1859944115140833756[238] = 0;
   out_1859944115140833756[239] = 0;
   out_1859944115140833756[240] = 0;
   out_1859944115140833756[241] = 0;
   out_1859944115140833756[242] = 1;
   out_1859944115140833756[243] = 0;
   out_1859944115140833756[244] = 0;
   out_1859944115140833756[245] = 0;
   out_1859944115140833756[246] = 0;
   out_1859944115140833756[247] = 0;
   out_1859944115140833756[248] = 0;
   out_1859944115140833756[249] = 0;
   out_1859944115140833756[250] = 0;
   out_1859944115140833756[251] = 0;
   out_1859944115140833756[252] = 0;
   out_1859944115140833756[253] = 0;
   out_1859944115140833756[254] = 0;
   out_1859944115140833756[255] = 0;
   out_1859944115140833756[256] = 0;
   out_1859944115140833756[257] = 0;
   out_1859944115140833756[258] = 0;
   out_1859944115140833756[259] = 0;
   out_1859944115140833756[260] = 0;
   out_1859944115140833756[261] = 0;
   out_1859944115140833756[262] = 0;
   out_1859944115140833756[263] = 0;
   out_1859944115140833756[264] = 1;
   out_1859944115140833756[265] = 0;
   out_1859944115140833756[266] = 0;
   out_1859944115140833756[267] = 0;
   out_1859944115140833756[268] = 0;
   out_1859944115140833756[269] = 0;
   out_1859944115140833756[270] = 0;
   out_1859944115140833756[271] = 0;
   out_1859944115140833756[272] = 0;
   out_1859944115140833756[273] = 0;
   out_1859944115140833756[274] = 0;
   out_1859944115140833756[275] = 0;
   out_1859944115140833756[276] = 0;
   out_1859944115140833756[277] = 0;
   out_1859944115140833756[278] = 0;
   out_1859944115140833756[279] = 0;
   out_1859944115140833756[280] = 0;
   out_1859944115140833756[281] = 0;
   out_1859944115140833756[282] = 0;
   out_1859944115140833756[283] = 0;
   out_1859944115140833756[284] = 0;
   out_1859944115140833756[285] = 0;
   out_1859944115140833756[286] = 1;
   out_1859944115140833756[287] = 0;
   out_1859944115140833756[288] = 0;
   out_1859944115140833756[289] = 0;
   out_1859944115140833756[290] = 0;
   out_1859944115140833756[291] = 0;
   out_1859944115140833756[292] = 0;
   out_1859944115140833756[293] = 0;
   out_1859944115140833756[294] = 0;
   out_1859944115140833756[295] = 0;
   out_1859944115140833756[296] = 0;
   out_1859944115140833756[297] = 0;
   out_1859944115140833756[298] = 0;
   out_1859944115140833756[299] = 0;
   out_1859944115140833756[300] = 0;
   out_1859944115140833756[301] = 0;
   out_1859944115140833756[302] = 0;
   out_1859944115140833756[303] = 0;
   out_1859944115140833756[304] = 0;
   out_1859944115140833756[305] = 0;
   out_1859944115140833756[306] = 0;
   out_1859944115140833756[307] = 0;
   out_1859944115140833756[308] = 1;
   out_1859944115140833756[309] = 0;
   out_1859944115140833756[310] = 0;
   out_1859944115140833756[311] = 0;
   out_1859944115140833756[312] = 0;
   out_1859944115140833756[313] = 0;
   out_1859944115140833756[314] = 0;
   out_1859944115140833756[315] = 0;
   out_1859944115140833756[316] = 0;
   out_1859944115140833756[317] = 0;
   out_1859944115140833756[318] = 0;
   out_1859944115140833756[319] = 0;
   out_1859944115140833756[320] = 0;
   out_1859944115140833756[321] = 0;
   out_1859944115140833756[322] = 0;
   out_1859944115140833756[323] = 0;
   out_1859944115140833756[324] = 0;
   out_1859944115140833756[325] = 0;
   out_1859944115140833756[326] = 0;
   out_1859944115140833756[327] = 0;
   out_1859944115140833756[328] = 0;
   out_1859944115140833756[329] = 0;
   out_1859944115140833756[330] = 1;
   out_1859944115140833756[331] = 0;
   out_1859944115140833756[332] = 0;
   out_1859944115140833756[333] = 0;
   out_1859944115140833756[334] = 0;
   out_1859944115140833756[335] = 0;
   out_1859944115140833756[336] = 0;
   out_1859944115140833756[337] = 0;
   out_1859944115140833756[338] = 0;
   out_1859944115140833756[339] = 0;
   out_1859944115140833756[340] = 0;
   out_1859944115140833756[341] = 0;
   out_1859944115140833756[342] = 0;
   out_1859944115140833756[343] = 0;
   out_1859944115140833756[344] = 0;
   out_1859944115140833756[345] = 0;
   out_1859944115140833756[346] = 0;
   out_1859944115140833756[347] = 0;
   out_1859944115140833756[348] = 0;
   out_1859944115140833756[349] = 0;
   out_1859944115140833756[350] = 0;
   out_1859944115140833756[351] = 0;
   out_1859944115140833756[352] = 1;
   out_1859944115140833756[353] = 0;
   out_1859944115140833756[354] = 0;
   out_1859944115140833756[355] = 0;
   out_1859944115140833756[356] = 0;
   out_1859944115140833756[357] = 0;
   out_1859944115140833756[358] = 0;
   out_1859944115140833756[359] = 0;
   out_1859944115140833756[360] = 0;
   out_1859944115140833756[361] = 0;
   out_1859944115140833756[362] = 0;
   out_1859944115140833756[363] = 0;
   out_1859944115140833756[364] = 0;
   out_1859944115140833756[365] = 0;
   out_1859944115140833756[366] = 0;
   out_1859944115140833756[367] = 0;
   out_1859944115140833756[368] = 0;
   out_1859944115140833756[369] = 0;
   out_1859944115140833756[370] = 0;
   out_1859944115140833756[371] = 0;
   out_1859944115140833756[372] = 0;
   out_1859944115140833756[373] = 0;
   out_1859944115140833756[374] = 1;
   out_1859944115140833756[375] = 0;
   out_1859944115140833756[376] = 0;
   out_1859944115140833756[377] = 0;
   out_1859944115140833756[378] = 0;
   out_1859944115140833756[379] = 0;
   out_1859944115140833756[380] = 0;
   out_1859944115140833756[381] = 0;
   out_1859944115140833756[382] = 0;
   out_1859944115140833756[383] = 0;
   out_1859944115140833756[384] = 0;
   out_1859944115140833756[385] = 0;
   out_1859944115140833756[386] = 0;
   out_1859944115140833756[387] = 0;
   out_1859944115140833756[388] = 0;
   out_1859944115140833756[389] = 0;
   out_1859944115140833756[390] = 0;
   out_1859944115140833756[391] = 0;
   out_1859944115140833756[392] = 0;
   out_1859944115140833756[393] = 0;
   out_1859944115140833756[394] = 0;
   out_1859944115140833756[395] = 0;
   out_1859944115140833756[396] = 1;
   out_1859944115140833756[397] = 0;
   out_1859944115140833756[398] = 0;
   out_1859944115140833756[399] = 0;
   out_1859944115140833756[400] = 0;
   out_1859944115140833756[401] = 0;
   out_1859944115140833756[402] = 0;
   out_1859944115140833756[403] = 0;
   out_1859944115140833756[404] = 0;
   out_1859944115140833756[405] = 0;
   out_1859944115140833756[406] = 0;
   out_1859944115140833756[407] = 0;
   out_1859944115140833756[408] = 0;
   out_1859944115140833756[409] = 0;
   out_1859944115140833756[410] = 0;
   out_1859944115140833756[411] = 0;
   out_1859944115140833756[412] = 0;
   out_1859944115140833756[413] = 0;
   out_1859944115140833756[414] = 0;
   out_1859944115140833756[415] = 0;
   out_1859944115140833756[416] = 0;
   out_1859944115140833756[417] = 0;
   out_1859944115140833756[418] = 1;
   out_1859944115140833756[419] = 0;
   out_1859944115140833756[420] = 0;
   out_1859944115140833756[421] = 0;
   out_1859944115140833756[422] = 0;
   out_1859944115140833756[423] = 0;
   out_1859944115140833756[424] = 0;
   out_1859944115140833756[425] = 0;
   out_1859944115140833756[426] = 0;
   out_1859944115140833756[427] = 0;
   out_1859944115140833756[428] = 0;
   out_1859944115140833756[429] = 0;
   out_1859944115140833756[430] = 0;
   out_1859944115140833756[431] = 0;
   out_1859944115140833756[432] = 0;
   out_1859944115140833756[433] = 0;
   out_1859944115140833756[434] = 0;
   out_1859944115140833756[435] = 0;
   out_1859944115140833756[436] = 0;
   out_1859944115140833756[437] = 0;
   out_1859944115140833756[438] = 0;
   out_1859944115140833756[439] = 0;
   out_1859944115140833756[440] = 1;
}
void h_4(double *state, double *unused, double *out_477847467584938311) {
   out_477847467584938311[0] = state[10] + state[13];
   out_477847467584938311[1] = state[11] + state[14];
   out_477847467584938311[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1389179959631934882) {
   out_1389179959631934882[0] = 0;
   out_1389179959631934882[1] = 0;
   out_1389179959631934882[2] = 0;
   out_1389179959631934882[3] = 0;
   out_1389179959631934882[4] = 0;
   out_1389179959631934882[5] = 0;
   out_1389179959631934882[6] = 0;
   out_1389179959631934882[7] = 0;
   out_1389179959631934882[8] = 0;
   out_1389179959631934882[9] = 0;
   out_1389179959631934882[10] = 1;
   out_1389179959631934882[11] = 0;
   out_1389179959631934882[12] = 0;
   out_1389179959631934882[13] = 1;
   out_1389179959631934882[14] = 0;
   out_1389179959631934882[15] = 0;
   out_1389179959631934882[16] = 0;
   out_1389179959631934882[17] = 0;
   out_1389179959631934882[18] = 0;
   out_1389179959631934882[19] = 0;
   out_1389179959631934882[20] = 0;
   out_1389179959631934882[21] = 0;
   out_1389179959631934882[22] = 0;
   out_1389179959631934882[23] = 0;
   out_1389179959631934882[24] = 0;
   out_1389179959631934882[25] = 0;
   out_1389179959631934882[26] = 0;
   out_1389179959631934882[27] = 0;
   out_1389179959631934882[28] = 0;
   out_1389179959631934882[29] = 0;
   out_1389179959631934882[30] = 0;
   out_1389179959631934882[31] = 0;
   out_1389179959631934882[32] = 0;
   out_1389179959631934882[33] = 1;
   out_1389179959631934882[34] = 0;
   out_1389179959631934882[35] = 0;
   out_1389179959631934882[36] = 1;
   out_1389179959631934882[37] = 0;
   out_1389179959631934882[38] = 0;
   out_1389179959631934882[39] = 0;
   out_1389179959631934882[40] = 0;
   out_1389179959631934882[41] = 0;
   out_1389179959631934882[42] = 0;
   out_1389179959631934882[43] = 0;
   out_1389179959631934882[44] = 0;
   out_1389179959631934882[45] = 0;
   out_1389179959631934882[46] = 0;
   out_1389179959631934882[47] = 0;
   out_1389179959631934882[48] = 0;
   out_1389179959631934882[49] = 0;
   out_1389179959631934882[50] = 0;
   out_1389179959631934882[51] = 0;
   out_1389179959631934882[52] = 0;
   out_1389179959631934882[53] = 0;
   out_1389179959631934882[54] = 0;
   out_1389179959631934882[55] = 0;
   out_1389179959631934882[56] = 1;
   out_1389179959631934882[57] = 0;
   out_1389179959631934882[58] = 0;
   out_1389179959631934882[59] = 1;
   out_1389179959631934882[60] = 0;
   out_1389179959631934882[61] = 0;
   out_1389179959631934882[62] = 0;
   out_1389179959631934882[63] = 0;
   out_1389179959631934882[64] = 0;
   out_1389179959631934882[65] = 0;
}
void h_9(double *state, double *unused, double *out_5537830471293940262) {
   out_5537830471293940262[0] = state[10];
   out_5537830471293940262[1] = state[11];
   out_5537830471293940262[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1147990313002344237) {
   out_1147990313002344237[0] = 0;
   out_1147990313002344237[1] = 0;
   out_1147990313002344237[2] = 0;
   out_1147990313002344237[3] = 0;
   out_1147990313002344237[4] = 0;
   out_1147990313002344237[5] = 0;
   out_1147990313002344237[6] = 0;
   out_1147990313002344237[7] = 0;
   out_1147990313002344237[8] = 0;
   out_1147990313002344237[9] = 0;
   out_1147990313002344237[10] = 1;
   out_1147990313002344237[11] = 0;
   out_1147990313002344237[12] = 0;
   out_1147990313002344237[13] = 0;
   out_1147990313002344237[14] = 0;
   out_1147990313002344237[15] = 0;
   out_1147990313002344237[16] = 0;
   out_1147990313002344237[17] = 0;
   out_1147990313002344237[18] = 0;
   out_1147990313002344237[19] = 0;
   out_1147990313002344237[20] = 0;
   out_1147990313002344237[21] = 0;
   out_1147990313002344237[22] = 0;
   out_1147990313002344237[23] = 0;
   out_1147990313002344237[24] = 0;
   out_1147990313002344237[25] = 0;
   out_1147990313002344237[26] = 0;
   out_1147990313002344237[27] = 0;
   out_1147990313002344237[28] = 0;
   out_1147990313002344237[29] = 0;
   out_1147990313002344237[30] = 0;
   out_1147990313002344237[31] = 0;
   out_1147990313002344237[32] = 0;
   out_1147990313002344237[33] = 1;
   out_1147990313002344237[34] = 0;
   out_1147990313002344237[35] = 0;
   out_1147990313002344237[36] = 0;
   out_1147990313002344237[37] = 0;
   out_1147990313002344237[38] = 0;
   out_1147990313002344237[39] = 0;
   out_1147990313002344237[40] = 0;
   out_1147990313002344237[41] = 0;
   out_1147990313002344237[42] = 0;
   out_1147990313002344237[43] = 0;
   out_1147990313002344237[44] = 0;
   out_1147990313002344237[45] = 0;
   out_1147990313002344237[46] = 0;
   out_1147990313002344237[47] = 0;
   out_1147990313002344237[48] = 0;
   out_1147990313002344237[49] = 0;
   out_1147990313002344237[50] = 0;
   out_1147990313002344237[51] = 0;
   out_1147990313002344237[52] = 0;
   out_1147990313002344237[53] = 0;
   out_1147990313002344237[54] = 0;
   out_1147990313002344237[55] = 0;
   out_1147990313002344237[56] = 1;
   out_1147990313002344237[57] = 0;
   out_1147990313002344237[58] = 0;
   out_1147990313002344237[59] = 0;
   out_1147990313002344237[60] = 0;
   out_1147990313002344237[61] = 0;
   out_1147990313002344237[62] = 0;
   out_1147990313002344237[63] = 0;
   out_1147990313002344237[64] = 0;
   out_1147990313002344237[65] = 0;
}
void h_10(double *state, double *unused, double *out_7345311412480798263) {
   out_7345311412480798263[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7345311412480798263[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7345311412480798263[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1795520567236383254) {
   out_1795520567236383254[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1795520567236383254[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1795520567236383254[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1795520567236383254[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1795520567236383254[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1795520567236383254[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1795520567236383254[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1795520567236383254[7] = 0;
   out_1795520567236383254[8] = 0;
   out_1795520567236383254[9] = 0;
   out_1795520567236383254[10] = 0;
   out_1795520567236383254[11] = 0;
   out_1795520567236383254[12] = 0;
   out_1795520567236383254[13] = 0;
   out_1795520567236383254[14] = 0;
   out_1795520567236383254[15] = 0;
   out_1795520567236383254[16] = 1;
   out_1795520567236383254[17] = 0;
   out_1795520567236383254[18] = 0;
   out_1795520567236383254[19] = 1;
   out_1795520567236383254[20] = 0;
   out_1795520567236383254[21] = 0;
   out_1795520567236383254[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1795520567236383254[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1795520567236383254[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1795520567236383254[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1795520567236383254[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1795520567236383254[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1795520567236383254[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1795520567236383254[29] = 0;
   out_1795520567236383254[30] = 0;
   out_1795520567236383254[31] = 0;
   out_1795520567236383254[32] = 0;
   out_1795520567236383254[33] = 0;
   out_1795520567236383254[34] = 0;
   out_1795520567236383254[35] = 0;
   out_1795520567236383254[36] = 0;
   out_1795520567236383254[37] = 0;
   out_1795520567236383254[38] = 0;
   out_1795520567236383254[39] = 1;
   out_1795520567236383254[40] = 0;
   out_1795520567236383254[41] = 0;
   out_1795520567236383254[42] = 1;
   out_1795520567236383254[43] = 0;
   out_1795520567236383254[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1795520567236383254[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1795520567236383254[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1795520567236383254[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1795520567236383254[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1795520567236383254[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1795520567236383254[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1795520567236383254[51] = 0;
   out_1795520567236383254[52] = 0;
   out_1795520567236383254[53] = 0;
   out_1795520567236383254[54] = 0;
   out_1795520567236383254[55] = 0;
   out_1795520567236383254[56] = 0;
   out_1795520567236383254[57] = 0;
   out_1795520567236383254[58] = 0;
   out_1795520567236383254[59] = 0;
   out_1795520567236383254[60] = 0;
   out_1795520567236383254[61] = 0;
   out_1795520567236383254[62] = 1;
   out_1795520567236383254[63] = 0;
   out_1795520567236383254[64] = 0;
   out_1795520567236383254[65] = 1;
}
void h_12(double *state, double *unused, double *out_5793995701614192869) {
   out_5793995701614192869[0] = state[0];
   out_5793995701614192869[1] = state[1];
   out_5793995701614192869[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3630276448400026913) {
   out_3630276448400026913[0] = 1;
   out_3630276448400026913[1] = 0;
   out_3630276448400026913[2] = 0;
   out_3630276448400026913[3] = 0;
   out_3630276448400026913[4] = 0;
   out_3630276448400026913[5] = 0;
   out_3630276448400026913[6] = 0;
   out_3630276448400026913[7] = 0;
   out_3630276448400026913[8] = 0;
   out_3630276448400026913[9] = 0;
   out_3630276448400026913[10] = 0;
   out_3630276448400026913[11] = 0;
   out_3630276448400026913[12] = 0;
   out_3630276448400026913[13] = 0;
   out_3630276448400026913[14] = 0;
   out_3630276448400026913[15] = 0;
   out_3630276448400026913[16] = 0;
   out_3630276448400026913[17] = 0;
   out_3630276448400026913[18] = 0;
   out_3630276448400026913[19] = 0;
   out_3630276448400026913[20] = 0;
   out_3630276448400026913[21] = 0;
   out_3630276448400026913[22] = 0;
   out_3630276448400026913[23] = 1;
   out_3630276448400026913[24] = 0;
   out_3630276448400026913[25] = 0;
   out_3630276448400026913[26] = 0;
   out_3630276448400026913[27] = 0;
   out_3630276448400026913[28] = 0;
   out_3630276448400026913[29] = 0;
   out_3630276448400026913[30] = 0;
   out_3630276448400026913[31] = 0;
   out_3630276448400026913[32] = 0;
   out_3630276448400026913[33] = 0;
   out_3630276448400026913[34] = 0;
   out_3630276448400026913[35] = 0;
   out_3630276448400026913[36] = 0;
   out_3630276448400026913[37] = 0;
   out_3630276448400026913[38] = 0;
   out_3630276448400026913[39] = 0;
   out_3630276448400026913[40] = 0;
   out_3630276448400026913[41] = 0;
   out_3630276448400026913[42] = 0;
   out_3630276448400026913[43] = 0;
   out_3630276448400026913[44] = 0;
   out_3630276448400026913[45] = 0;
   out_3630276448400026913[46] = 1;
   out_3630276448400026913[47] = 0;
   out_3630276448400026913[48] = 0;
   out_3630276448400026913[49] = 0;
   out_3630276448400026913[50] = 0;
   out_3630276448400026913[51] = 0;
   out_3630276448400026913[52] = 0;
   out_3630276448400026913[53] = 0;
   out_3630276448400026913[54] = 0;
   out_3630276448400026913[55] = 0;
   out_3630276448400026913[56] = 0;
   out_3630276448400026913[57] = 0;
   out_3630276448400026913[58] = 0;
   out_3630276448400026913[59] = 0;
   out_3630276448400026913[60] = 0;
   out_3630276448400026913[61] = 0;
   out_3630276448400026913[62] = 0;
   out_3630276448400026913[63] = 0;
   out_3630276448400026913[64] = 0;
   out_3630276448400026913[65] = 0;
}
void h_31(double *state, double *unused, double *out_2788617611365882815) {
   out_2788617611365882815[0] = state[7];
   out_2788617611365882815[1] = state[8];
   out_2788617611365882815[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1977482097740672494) {
   out_1977482097740672494[0] = 0;
   out_1977482097740672494[1] = 0;
   out_1977482097740672494[2] = 0;
   out_1977482097740672494[3] = 0;
   out_1977482097740672494[4] = 0;
   out_1977482097740672494[5] = 0;
   out_1977482097740672494[6] = 0;
   out_1977482097740672494[7] = 1;
   out_1977482097740672494[8] = 0;
   out_1977482097740672494[9] = 0;
   out_1977482097740672494[10] = 0;
   out_1977482097740672494[11] = 0;
   out_1977482097740672494[12] = 0;
   out_1977482097740672494[13] = 0;
   out_1977482097740672494[14] = 0;
   out_1977482097740672494[15] = 0;
   out_1977482097740672494[16] = 0;
   out_1977482097740672494[17] = 0;
   out_1977482097740672494[18] = 0;
   out_1977482097740672494[19] = 0;
   out_1977482097740672494[20] = 0;
   out_1977482097740672494[21] = 0;
   out_1977482097740672494[22] = 0;
   out_1977482097740672494[23] = 0;
   out_1977482097740672494[24] = 0;
   out_1977482097740672494[25] = 0;
   out_1977482097740672494[26] = 0;
   out_1977482097740672494[27] = 0;
   out_1977482097740672494[28] = 0;
   out_1977482097740672494[29] = 0;
   out_1977482097740672494[30] = 1;
   out_1977482097740672494[31] = 0;
   out_1977482097740672494[32] = 0;
   out_1977482097740672494[33] = 0;
   out_1977482097740672494[34] = 0;
   out_1977482097740672494[35] = 0;
   out_1977482097740672494[36] = 0;
   out_1977482097740672494[37] = 0;
   out_1977482097740672494[38] = 0;
   out_1977482097740672494[39] = 0;
   out_1977482097740672494[40] = 0;
   out_1977482097740672494[41] = 0;
   out_1977482097740672494[42] = 0;
   out_1977482097740672494[43] = 0;
   out_1977482097740672494[44] = 0;
   out_1977482097740672494[45] = 0;
   out_1977482097740672494[46] = 0;
   out_1977482097740672494[47] = 0;
   out_1977482097740672494[48] = 0;
   out_1977482097740672494[49] = 0;
   out_1977482097740672494[50] = 0;
   out_1977482097740672494[51] = 0;
   out_1977482097740672494[52] = 0;
   out_1977482097740672494[53] = 1;
   out_1977482097740672494[54] = 0;
   out_1977482097740672494[55] = 0;
   out_1977482097740672494[56] = 0;
   out_1977482097740672494[57] = 0;
   out_1977482097740672494[58] = 0;
   out_1977482097740672494[59] = 0;
   out_1977482097740672494[60] = 0;
   out_1977482097740672494[61] = 0;
   out_1977482097740672494[62] = 0;
   out_1977482097740672494[63] = 0;
   out_1977482097740672494[64] = 0;
   out_1977482097740672494[65] = 0;
}
void h_32(double *state, double *unused, double *out_5885104912807721734) {
   out_5885104912807721734[0] = state[3];
   out_5885104912807721734[1] = state[4];
   out_5885104912807721734[2] = state[5];
   out_5885104912807721734[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7778786469948285052) {
   out_7778786469948285052[0] = 0;
   out_7778786469948285052[1] = 0;
   out_7778786469948285052[2] = 0;
   out_7778786469948285052[3] = 1;
   out_7778786469948285052[4] = 0;
   out_7778786469948285052[5] = 0;
   out_7778786469948285052[6] = 0;
   out_7778786469948285052[7] = 0;
   out_7778786469948285052[8] = 0;
   out_7778786469948285052[9] = 0;
   out_7778786469948285052[10] = 0;
   out_7778786469948285052[11] = 0;
   out_7778786469948285052[12] = 0;
   out_7778786469948285052[13] = 0;
   out_7778786469948285052[14] = 0;
   out_7778786469948285052[15] = 0;
   out_7778786469948285052[16] = 0;
   out_7778786469948285052[17] = 0;
   out_7778786469948285052[18] = 0;
   out_7778786469948285052[19] = 0;
   out_7778786469948285052[20] = 0;
   out_7778786469948285052[21] = 0;
   out_7778786469948285052[22] = 0;
   out_7778786469948285052[23] = 0;
   out_7778786469948285052[24] = 0;
   out_7778786469948285052[25] = 0;
   out_7778786469948285052[26] = 1;
   out_7778786469948285052[27] = 0;
   out_7778786469948285052[28] = 0;
   out_7778786469948285052[29] = 0;
   out_7778786469948285052[30] = 0;
   out_7778786469948285052[31] = 0;
   out_7778786469948285052[32] = 0;
   out_7778786469948285052[33] = 0;
   out_7778786469948285052[34] = 0;
   out_7778786469948285052[35] = 0;
   out_7778786469948285052[36] = 0;
   out_7778786469948285052[37] = 0;
   out_7778786469948285052[38] = 0;
   out_7778786469948285052[39] = 0;
   out_7778786469948285052[40] = 0;
   out_7778786469948285052[41] = 0;
   out_7778786469948285052[42] = 0;
   out_7778786469948285052[43] = 0;
   out_7778786469948285052[44] = 0;
   out_7778786469948285052[45] = 0;
   out_7778786469948285052[46] = 0;
   out_7778786469948285052[47] = 0;
   out_7778786469948285052[48] = 0;
   out_7778786469948285052[49] = 1;
   out_7778786469948285052[50] = 0;
   out_7778786469948285052[51] = 0;
   out_7778786469948285052[52] = 0;
   out_7778786469948285052[53] = 0;
   out_7778786469948285052[54] = 0;
   out_7778786469948285052[55] = 0;
   out_7778786469948285052[56] = 0;
   out_7778786469948285052[57] = 0;
   out_7778786469948285052[58] = 0;
   out_7778786469948285052[59] = 0;
   out_7778786469948285052[60] = 0;
   out_7778786469948285052[61] = 0;
   out_7778786469948285052[62] = 0;
   out_7778786469948285052[63] = 0;
   out_7778786469948285052[64] = 0;
   out_7778786469948285052[65] = 0;
   out_7778786469948285052[66] = 0;
   out_7778786469948285052[67] = 0;
   out_7778786469948285052[68] = 0;
   out_7778786469948285052[69] = 0;
   out_7778786469948285052[70] = 0;
   out_7778786469948285052[71] = 0;
   out_7778786469948285052[72] = 1;
   out_7778786469948285052[73] = 0;
   out_7778786469948285052[74] = 0;
   out_7778786469948285052[75] = 0;
   out_7778786469948285052[76] = 0;
   out_7778786469948285052[77] = 0;
   out_7778786469948285052[78] = 0;
   out_7778786469948285052[79] = 0;
   out_7778786469948285052[80] = 0;
   out_7778786469948285052[81] = 0;
   out_7778786469948285052[82] = 0;
   out_7778786469948285052[83] = 0;
   out_7778786469948285052[84] = 0;
   out_7778786469948285052[85] = 0;
   out_7778786469948285052[86] = 0;
   out_7778786469948285052[87] = 0;
}
void h_13(double *state, double *unused, double *out_7010832056161989348) {
   out_7010832056161989348[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7010832056161989348[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7010832056161989348[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6130077919333823603) {
   out_6130077919333823603[0] = 0;
   out_6130077919333823603[1] = 0;
   out_6130077919333823603[2] = 0;
   out_6130077919333823603[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6130077919333823603[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6130077919333823603[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6130077919333823603[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6130077919333823603[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6130077919333823603[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6130077919333823603[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6130077919333823603[10] = 0;
   out_6130077919333823603[11] = 0;
   out_6130077919333823603[12] = 0;
   out_6130077919333823603[13] = 0;
   out_6130077919333823603[14] = 0;
   out_6130077919333823603[15] = 0;
   out_6130077919333823603[16] = 0;
   out_6130077919333823603[17] = 0;
   out_6130077919333823603[18] = 0;
   out_6130077919333823603[19] = 0;
   out_6130077919333823603[20] = 0;
   out_6130077919333823603[21] = 0;
   out_6130077919333823603[22] = 0;
   out_6130077919333823603[23] = 0;
   out_6130077919333823603[24] = 0;
   out_6130077919333823603[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6130077919333823603[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6130077919333823603[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6130077919333823603[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6130077919333823603[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6130077919333823603[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6130077919333823603[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6130077919333823603[32] = 0;
   out_6130077919333823603[33] = 0;
   out_6130077919333823603[34] = 0;
   out_6130077919333823603[35] = 0;
   out_6130077919333823603[36] = 0;
   out_6130077919333823603[37] = 0;
   out_6130077919333823603[38] = 0;
   out_6130077919333823603[39] = 0;
   out_6130077919333823603[40] = 0;
   out_6130077919333823603[41] = 0;
   out_6130077919333823603[42] = 0;
   out_6130077919333823603[43] = 0;
   out_6130077919333823603[44] = 0;
   out_6130077919333823603[45] = 0;
   out_6130077919333823603[46] = 0;
   out_6130077919333823603[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6130077919333823603[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6130077919333823603[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6130077919333823603[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6130077919333823603[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6130077919333823603[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6130077919333823603[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6130077919333823603[54] = 0;
   out_6130077919333823603[55] = 0;
   out_6130077919333823603[56] = 0;
   out_6130077919333823603[57] = 0;
   out_6130077919333823603[58] = 0;
   out_6130077919333823603[59] = 0;
   out_6130077919333823603[60] = 0;
   out_6130077919333823603[61] = 0;
   out_6130077919333823603[62] = 0;
   out_6130077919333823603[63] = 0;
   out_6130077919333823603[64] = 0;
   out_6130077919333823603[65] = 0;
}
void h_14(double *state, double *unused, double *out_5537830471293940262) {
   out_5537830471293940262[0] = state[10];
   out_5537830471293940262[1] = state[11];
   out_5537830471293940262[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1147990313002344237) {
   out_1147990313002344237[0] = 0;
   out_1147990313002344237[1] = 0;
   out_1147990313002344237[2] = 0;
   out_1147990313002344237[3] = 0;
   out_1147990313002344237[4] = 0;
   out_1147990313002344237[5] = 0;
   out_1147990313002344237[6] = 0;
   out_1147990313002344237[7] = 0;
   out_1147990313002344237[8] = 0;
   out_1147990313002344237[9] = 0;
   out_1147990313002344237[10] = 1;
   out_1147990313002344237[11] = 0;
   out_1147990313002344237[12] = 0;
   out_1147990313002344237[13] = 0;
   out_1147990313002344237[14] = 0;
   out_1147990313002344237[15] = 0;
   out_1147990313002344237[16] = 0;
   out_1147990313002344237[17] = 0;
   out_1147990313002344237[18] = 0;
   out_1147990313002344237[19] = 0;
   out_1147990313002344237[20] = 0;
   out_1147990313002344237[21] = 0;
   out_1147990313002344237[22] = 0;
   out_1147990313002344237[23] = 0;
   out_1147990313002344237[24] = 0;
   out_1147990313002344237[25] = 0;
   out_1147990313002344237[26] = 0;
   out_1147990313002344237[27] = 0;
   out_1147990313002344237[28] = 0;
   out_1147990313002344237[29] = 0;
   out_1147990313002344237[30] = 0;
   out_1147990313002344237[31] = 0;
   out_1147990313002344237[32] = 0;
   out_1147990313002344237[33] = 1;
   out_1147990313002344237[34] = 0;
   out_1147990313002344237[35] = 0;
   out_1147990313002344237[36] = 0;
   out_1147990313002344237[37] = 0;
   out_1147990313002344237[38] = 0;
   out_1147990313002344237[39] = 0;
   out_1147990313002344237[40] = 0;
   out_1147990313002344237[41] = 0;
   out_1147990313002344237[42] = 0;
   out_1147990313002344237[43] = 0;
   out_1147990313002344237[44] = 0;
   out_1147990313002344237[45] = 0;
   out_1147990313002344237[46] = 0;
   out_1147990313002344237[47] = 0;
   out_1147990313002344237[48] = 0;
   out_1147990313002344237[49] = 0;
   out_1147990313002344237[50] = 0;
   out_1147990313002344237[51] = 0;
   out_1147990313002344237[52] = 0;
   out_1147990313002344237[53] = 0;
   out_1147990313002344237[54] = 0;
   out_1147990313002344237[55] = 0;
   out_1147990313002344237[56] = 1;
   out_1147990313002344237[57] = 0;
   out_1147990313002344237[58] = 0;
   out_1147990313002344237[59] = 0;
   out_1147990313002344237[60] = 0;
   out_1147990313002344237[61] = 0;
   out_1147990313002344237[62] = 0;
   out_1147990313002344237[63] = 0;
   out_1147990313002344237[64] = 0;
   out_1147990313002344237[65] = 0;
}
void h_33(double *state, double *unused, double *out_3088870080015929401) {
   out_3088870080015929401[0] = state[16];
   out_3088870080015929401[1] = state[17];
   out_3088870080015929401[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5128039102379530098) {
   out_5128039102379530098[0] = 0;
   out_5128039102379530098[1] = 0;
   out_5128039102379530098[2] = 0;
   out_5128039102379530098[3] = 0;
   out_5128039102379530098[4] = 0;
   out_5128039102379530098[5] = 0;
   out_5128039102379530098[6] = 0;
   out_5128039102379530098[7] = 0;
   out_5128039102379530098[8] = 0;
   out_5128039102379530098[9] = 0;
   out_5128039102379530098[10] = 0;
   out_5128039102379530098[11] = 0;
   out_5128039102379530098[12] = 0;
   out_5128039102379530098[13] = 0;
   out_5128039102379530098[14] = 0;
   out_5128039102379530098[15] = 0;
   out_5128039102379530098[16] = 1;
   out_5128039102379530098[17] = 0;
   out_5128039102379530098[18] = 0;
   out_5128039102379530098[19] = 0;
   out_5128039102379530098[20] = 0;
   out_5128039102379530098[21] = 0;
   out_5128039102379530098[22] = 0;
   out_5128039102379530098[23] = 0;
   out_5128039102379530098[24] = 0;
   out_5128039102379530098[25] = 0;
   out_5128039102379530098[26] = 0;
   out_5128039102379530098[27] = 0;
   out_5128039102379530098[28] = 0;
   out_5128039102379530098[29] = 0;
   out_5128039102379530098[30] = 0;
   out_5128039102379530098[31] = 0;
   out_5128039102379530098[32] = 0;
   out_5128039102379530098[33] = 0;
   out_5128039102379530098[34] = 0;
   out_5128039102379530098[35] = 0;
   out_5128039102379530098[36] = 0;
   out_5128039102379530098[37] = 0;
   out_5128039102379530098[38] = 0;
   out_5128039102379530098[39] = 1;
   out_5128039102379530098[40] = 0;
   out_5128039102379530098[41] = 0;
   out_5128039102379530098[42] = 0;
   out_5128039102379530098[43] = 0;
   out_5128039102379530098[44] = 0;
   out_5128039102379530098[45] = 0;
   out_5128039102379530098[46] = 0;
   out_5128039102379530098[47] = 0;
   out_5128039102379530098[48] = 0;
   out_5128039102379530098[49] = 0;
   out_5128039102379530098[50] = 0;
   out_5128039102379530098[51] = 0;
   out_5128039102379530098[52] = 0;
   out_5128039102379530098[53] = 0;
   out_5128039102379530098[54] = 0;
   out_5128039102379530098[55] = 0;
   out_5128039102379530098[56] = 0;
   out_5128039102379530098[57] = 0;
   out_5128039102379530098[58] = 0;
   out_5128039102379530098[59] = 0;
   out_5128039102379530098[60] = 0;
   out_5128039102379530098[61] = 0;
   out_5128039102379530098[62] = 1;
   out_5128039102379530098[63] = 0;
   out_5128039102379530098[64] = 0;
   out_5128039102379530098[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4100496910655232877) {
  H(in_vec, out_4100496910655232877);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5392627368994945959) {
  err_fun(nom_x, delta_x, out_5392627368994945959);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2141277271085920178) {
  inv_err_fun(nom_x, true_x, out_2141277271085920178);
}
void live_H_mod_fun(double *state, double *out_5237530958733850901) {
  H_mod_fun(state, out_5237530958733850901);
}
void live_f_fun(double *state, double dt, double *out_3661643488610007850) {
  f_fun(state,  dt, out_3661643488610007850);
}
void live_F_fun(double *state, double dt, double *out_1859944115140833756) {
  F_fun(state,  dt, out_1859944115140833756);
}
void live_h_4(double *state, double *unused, double *out_477847467584938311) {
  h_4(state, unused, out_477847467584938311);
}
void live_H_4(double *state, double *unused, double *out_1389179959631934882) {
  H_4(state, unused, out_1389179959631934882);
}
void live_h_9(double *state, double *unused, double *out_5537830471293940262) {
  h_9(state, unused, out_5537830471293940262);
}
void live_H_9(double *state, double *unused, double *out_1147990313002344237) {
  H_9(state, unused, out_1147990313002344237);
}
void live_h_10(double *state, double *unused, double *out_7345311412480798263) {
  h_10(state, unused, out_7345311412480798263);
}
void live_H_10(double *state, double *unused, double *out_1795520567236383254) {
  H_10(state, unused, out_1795520567236383254);
}
void live_h_12(double *state, double *unused, double *out_5793995701614192869) {
  h_12(state, unused, out_5793995701614192869);
}
void live_H_12(double *state, double *unused, double *out_3630276448400026913) {
  H_12(state, unused, out_3630276448400026913);
}
void live_h_31(double *state, double *unused, double *out_2788617611365882815) {
  h_31(state, unused, out_2788617611365882815);
}
void live_H_31(double *state, double *unused, double *out_1977482097740672494) {
  H_31(state, unused, out_1977482097740672494);
}
void live_h_32(double *state, double *unused, double *out_5885104912807721734) {
  h_32(state, unused, out_5885104912807721734);
}
void live_H_32(double *state, double *unused, double *out_7778786469948285052) {
  H_32(state, unused, out_7778786469948285052);
}
void live_h_13(double *state, double *unused, double *out_7010832056161989348) {
  h_13(state, unused, out_7010832056161989348);
}
void live_H_13(double *state, double *unused, double *out_6130077919333823603) {
  H_13(state, unused, out_6130077919333823603);
}
void live_h_14(double *state, double *unused, double *out_5537830471293940262) {
  h_14(state, unused, out_5537830471293940262);
}
void live_H_14(double *state, double *unused, double *out_1147990313002344237) {
  H_14(state, unused, out_1147990313002344237);
}
void live_h_33(double *state, double *unused, double *out_3088870080015929401) {
  h_33(state, unused, out_3088870080015929401);
}
void live_H_33(double *state, double *unused, double *out_5128039102379530098) {
  H_33(state, unused, out_5128039102379530098);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
