#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1948723160519481493) {
   out_1948723160519481493[0] = 0;
   out_1948723160519481493[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1948723160519481493[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1948723160519481493[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1948723160519481493[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1948723160519481493[5] = -sin(in_vec[1]);
   out_1948723160519481493[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1948723160519481493[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1948723160519481493[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1948723160519481493[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1948723160519481493[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1948723160519481493[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1948723160519481493[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1948723160519481493[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1948723160519481493[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1948723160519481493[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1948723160519481493[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1948723160519481493[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1326617294892026553) {
   out_1326617294892026553[0] = delta_x[0] + nom_x[0];
   out_1326617294892026553[1] = delta_x[1] + nom_x[1];
   out_1326617294892026553[2] = delta_x[2] + nom_x[2];
   out_1326617294892026553[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1326617294892026553[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1326617294892026553[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1326617294892026553[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1326617294892026553[7] = delta_x[6] + nom_x[7];
   out_1326617294892026553[8] = delta_x[7] + nom_x[8];
   out_1326617294892026553[9] = delta_x[8] + nom_x[9];
   out_1326617294892026553[10] = delta_x[9] + nom_x[10];
   out_1326617294892026553[11] = delta_x[10] + nom_x[11];
   out_1326617294892026553[12] = delta_x[11] + nom_x[12];
   out_1326617294892026553[13] = delta_x[12] + nom_x[13];
   out_1326617294892026553[14] = delta_x[13] + nom_x[14];
   out_1326617294892026553[15] = delta_x[14] + nom_x[15];
   out_1326617294892026553[16] = delta_x[15] + nom_x[16];
   out_1326617294892026553[17] = delta_x[16] + nom_x[17];
   out_1326617294892026553[18] = delta_x[17] + nom_x[18];
   out_1326617294892026553[19] = delta_x[18] + nom_x[19];
   out_1326617294892026553[20] = delta_x[19] + nom_x[20];
   out_1326617294892026553[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4209877855577787445) {
   out_4209877855577787445[0] = -nom_x[0] + true_x[0];
   out_4209877855577787445[1] = -nom_x[1] + true_x[1];
   out_4209877855577787445[2] = -nom_x[2] + true_x[2];
   out_4209877855577787445[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4209877855577787445[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4209877855577787445[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4209877855577787445[6] = -nom_x[7] + true_x[7];
   out_4209877855577787445[7] = -nom_x[8] + true_x[8];
   out_4209877855577787445[8] = -nom_x[9] + true_x[9];
   out_4209877855577787445[9] = -nom_x[10] + true_x[10];
   out_4209877855577787445[10] = -nom_x[11] + true_x[11];
   out_4209877855577787445[11] = -nom_x[12] + true_x[12];
   out_4209877855577787445[12] = -nom_x[13] + true_x[13];
   out_4209877855577787445[13] = -nom_x[14] + true_x[14];
   out_4209877855577787445[14] = -nom_x[15] + true_x[15];
   out_4209877855577787445[15] = -nom_x[16] + true_x[16];
   out_4209877855577787445[16] = -nom_x[17] + true_x[17];
   out_4209877855577787445[17] = -nom_x[18] + true_x[18];
   out_4209877855577787445[18] = -nom_x[19] + true_x[19];
   out_4209877855577787445[19] = -nom_x[20] + true_x[20];
   out_4209877855577787445[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7504121032138680857) {
   out_7504121032138680857[0] = 1.0;
   out_7504121032138680857[1] = 0;
   out_7504121032138680857[2] = 0;
   out_7504121032138680857[3] = 0;
   out_7504121032138680857[4] = 0;
   out_7504121032138680857[5] = 0;
   out_7504121032138680857[6] = 0;
   out_7504121032138680857[7] = 0;
   out_7504121032138680857[8] = 0;
   out_7504121032138680857[9] = 0;
   out_7504121032138680857[10] = 0;
   out_7504121032138680857[11] = 0;
   out_7504121032138680857[12] = 0;
   out_7504121032138680857[13] = 0;
   out_7504121032138680857[14] = 0;
   out_7504121032138680857[15] = 0;
   out_7504121032138680857[16] = 0;
   out_7504121032138680857[17] = 0;
   out_7504121032138680857[18] = 0;
   out_7504121032138680857[19] = 0;
   out_7504121032138680857[20] = 0;
   out_7504121032138680857[21] = 0;
   out_7504121032138680857[22] = 1.0;
   out_7504121032138680857[23] = 0;
   out_7504121032138680857[24] = 0;
   out_7504121032138680857[25] = 0;
   out_7504121032138680857[26] = 0;
   out_7504121032138680857[27] = 0;
   out_7504121032138680857[28] = 0;
   out_7504121032138680857[29] = 0;
   out_7504121032138680857[30] = 0;
   out_7504121032138680857[31] = 0;
   out_7504121032138680857[32] = 0;
   out_7504121032138680857[33] = 0;
   out_7504121032138680857[34] = 0;
   out_7504121032138680857[35] = 0;
   out_7504121032138680857[36] = 0;
   out_7504121032138680857[37] = 0;
   out_7504121032138680857[38] = 0;
   out_7504121032138680857[39] = 0;
   out_7504121032138680857[40] = 0;
   out_7504121032138680857[41] = 0;
   out_7504121032138680857[42] = 0;
   out_7504121032138680857[43] = 0;
   out_7504121032138680857[44] = 1.0;
   out_7504121032138680857[45] = 0;
   out_7504121032138680857[46] = 0;
   out_7504121032138680857[47] = 0;
   out_7504121032138680857[48] = 0;
   out_7504121032138680857[49] = 0;
   out_7504121032138680857[50] = 0;
   out_7504121032138680857[51] = 0;
   out_7504121032138680857[52] = 0;
   out_7504121032138680857[53] = 0;
   out_7504121032138680857[54] = 0;
   out_7504121032138680857[55] = 0;
   out_7504121032138680857[56] = 0;
   out_7504121032138680857[57] = 0;
   out_7504121032138680857[58] = 0;
   out_7504121032138680857[59] = 0;
   out_7504121032138680857[60] = 0;
   out_7504121032138680857[61] = 0;
   out_7504121032138680857[62] = 0;
   out_7504121032138680857[63] = 0;
   out_7504121032138680857[64] = 0;
   out_7504121032138680857[65] = 0;
   out_7504121032138680857[66] = -0.5*state[4];
   out_7504121032138680857[67] = -0.5*state[5];
   out_7504121032138680857[68] = -0.5*state[6];
   out_7504121032138680857[69] = 0;
   out_7504121032138680857[70] = 0;
   out_7504121032138680857[71] = 0;
   out_7504121032138680857[72] = 0;
   out_7504121032138680857[73] = 0;
   out_7504121032138680857[74] = 0;
   out_7504121032138680857[75] = 0;
   out_7504121032138680857[76] = 0;
   out_7504121032138680857[77] = 0;
   out_7504121032138680857[78] = 0;
   out_7504121032138680857[79] = 0;
   out_7504121032138680857[80] = 0;
   out_7504121032138680857[81] = 0;
   out_7504121032138680857[82] = 0;
   out_7504121032138680857[83] = 0;
   out_7504121032138680857[84] = 0;
   out_7504121032138680857[85] = 0;
   out_7504121032138680857[86] = 0;
   out_7504121032138680857[87] = 0.5*state[3];
   out_7504121032138680857[88] = 0.5*state[6];
   out_7504121032138680857[89] = -0.5*state[5];
   out_7504121032138680857[90] = 0;
   out_7504121032138680857[91] = 0;
   out_7504121032138680857[92] = 0;
   out_7504121032138680857[93] = 0;
   out_7504121032138680857[94] = 0;
   out_7504121032138680857[95] = 0;
   out_7504121032138680857[96] = 0;
   out_7504121032138680857[97] = 0;
   out_7504121032138680857[98] = 0;
   out_7504121032138680857[99] = 0;
   out_7504121032138680857[100] = 0;
   out_7504121032138680857[101] = 0;
   out_7504121032138680857[102] = 0;
   out_7504121032138680857[103] = 0;
   out_7504121032138680857[104] = 0;
   out_7504121032138680857[105] = 0;
   out_7504121032138680857[106] = 0;
   out_7504121032138680857[107] = 0;
   out_7504121032138680857[108] = -0.5*state[6];
   out_7504121032138680857[109] = 0.5*state[3];
   out_7504121032138680857[110] = 0.5*state[4];
   out_7504121032138680857[111] = 0;
   out_7504121032138680857[112] = 0;
   out_7504121032138680857[113] = 0;
   out_7504121032138680857[114] = 0;
   out_7504121032138680857[115] = 0;
   out_7504121032138680857[116] = 0;
   out_7504121032138680857[117] = 0;
   out_7504121032138680857[118] = 0;
   out_7504121032138680857[119] = 0;
   out_7504121032138680857[120] = 0;
   out_7504121032138680857[121] = 0;
   out_7504121032138680857[122] = 0;
   out_7504121032138680857[123] = 0;
   out_7504121032138680857[124] = 0;
   out_7504121032138680857[125] = 0;
   out_7504121032138680857[126] = 0;
   out_7504121032138680857[127] = 0;
   out_7504121032138680857[128] = 0;
   out_7504121032138680857[129] = 0.5*state[5];
   out_7504121032138680857[130] = -0.5*state[4];
   out_7504121032138680857[131] = 0.5*state[3];
   out_7504121032138680857[132] = 0;
   out_7504121032138680857[133] = 0;
   out_7504121032138680857[134] = 0;
   out_7504121032138680857[135] = 0;
   out_7504121032138680857[136] = 0;
   out_7504121032138680857[137] = 0;
   out_7504121032138680857[138] = 0;
   out_7504121032138680857[139] = 0;
   out_7504121032138680857[140] = 0;
   out_7504121032138680857[141] = 0;
   out_7504121032138680857[142] = 0;
   out_7504121032138680857[143] = 0;
   out_7504121032138680857[144] = 0;
   out_7504121032138680857[145] = 0;
   out_7504121032138680857[146] = 0;
   out_7504121032138680857[147] = 0;
   out_7504121032138680857[148] = 0;
   out_7504121032138680857[149] = 0;
   out_7504121032138680857[150] = 0;
   out_7504121032138680857[151] = 0;
   out_7504121032138680857[152] = 0;
   out_7504121032138680857[153] = 1.0;
   out_7504121032138680857[154] = 0;
   out_7504121032138680857[155] = 0;
   out_7504121032138680857[156] = 0;
   out_7504121032138680857[157] = 0;
   out_7504121032138680857[158] = 0;
   out_7504121032138680857[159] = 0;
   out_7504121032138680857[160] = 0;
   out_7504121032138680857[161] = 0;
   out_7504121032138680857[162] = 0;
   out_7504121032138680857[163] = 0;
   out_7504121032138680857[164] = 0;
   out_7504121032138680857[165] = 0;
   out_7504121032138680857[166] = 0;
   out_7504121032138680857[167] = 0;
   out_7504121032138680857[168] = 0;
   out_7504121032138680857[169] = 0;
   out_7504121032138680857[170] = 0;
   out_7504121032138680857[171] = 0;
   out_7504121032138680857[172] = 0;
   out_7504121032138680857[173] = 0;
   out_7504121032138680857[174] = 0;
   out_7504121032138680857[175] = 1.0;
   out_7504121032138680857[176] = 0;
   out_7504121032138680857[177] = 0;
   out_7504121032138680857[178] = 0;
   out_7504121032138680857[179] = 0;
   out_7504121032138680857[180] = 0;
   out_7504121032138680857[181] = 0;
   out_7504121032138680857[182] = 0;
   out_7504121032138680857[183] = 0;
   out_7504121032138680857[184] = 0;
   out_7504121032138680857[185] = 0;
   out_7504121032138680857[186] = 0;
   out_7504121032138680857[187] = 0;
   out_7504121032138680857[188] = 0;
   out_7504121032138680857[189] = 0;
   out_7504121032138680857[190] = 0;
   out_7504121032138680857[191] = 0;
   out_7504121032138680857[192] = 0;
   out_7504121032138680857[193] = 0;
   out_7504121032138680857[194] = 0;
   out_7504121032138680857[195] = 0;
   out_7504121032138680857[196] = 0;
   out_7504121032138680857[197] = 1.0;
   out_7504121032138680857[198] = 0;
   out_7504121032138680857[199] = 0;
   out_7504121032138680857[200] = 0;
   out_7504121032138680857[201] = 0;
   out_7504121032138680857[202] = 0;
   out_7504121032138680857[203] = 0;
   out_7504121032138680857[204] = 0;
   out_7504121032138680857[205] = 0;
   out_7504121032138680857[206] = 0;
   out_7504121032138680857[207] = 0;
   out_7504121032138680857[208] = 0;
   out_7504121032138680857[209] = 0;
   out_7504121032138680857[210] = 0;
   out_7504121032138680857[211] = 0;
   out_7504121032138680857[212] = 0;
   out_7504121032138680857[213] = 0;
   out_7504121032138680857[214] = 0;
   out_7504121032138680857[215] = 0;
   out_7504121032138680857[216] = 0;
   out_7504121032138680857[217] = 0;
   out_7504121032138680857[218] = 0;
   out_7504121032138680857[219] = 1.0;
   out_7504121032138680857[220] = 0;
   out_7504121032138680857[221] = 0;
   out_7504121032138680857[222] = 0;
   out_7504121032138680857[223] = 0;
   out_7504121032138680857[224] = 0;
   out_7504121032138680857[225] = 0;
   out_7504121032138680857[226] = 0;
   out_7504121032138680857[227] = 0;
   out_7504121032138680857[228] = 0;
   out_7504121032138680857[229] = 0;
   out_7504121032138680857[230] = 0;
   out_7504121032138680857[231] = 0;
   out_7504121032138680857[232] = 0;
   out_7504121032138680857[233] = 0;
   out_7504121032138680857[234] = 0;
   out_7504121032138680857[235] = 0;
   out_7504121032138680857[236] = 0;
   out_7504121032138680857[237] = 0;
   out_7504121032138680857[238] = 0;
   out_7504121032138680857[239] = 0;
   out_7504121032138680857[240] = 0;
   out_7504121032138680857[241] = 1.0;
   out_7504121032138680857[242] = 0;
   out_7504121032138680857[243] = 0;
   out_7504121032138680857[244] = 0;
   out_7504121032138680857[245] = 0;
   out_7504121032138680857[246] = 0;
   out_7504121032138680857[247] = 0;
   out_7504121032138680857[248] = 0;
   out_7504121032138680857[249] = 0;
   out_7504121032138680857[250] = 0;
   out_7504121032138680857[251] = 0;
   out_7504121032138680857[252] = 0;
   out_7504121032138680857[253] = 0;
   out_7504121032138680857[254] = 0;
   out_7504121032138680857[255] = 0;
   out_7504121032138680857[256] = 0;
   out_7504121032138680857[257] = 0;
   out_7504121032138680857[258] = 0;
   out_7504121032138680857[259] = 0;
   out_7504121032138680857[260] = 0;
   out_7504121032138680857[261] = 0;
   out_7504121032138680857[262] = 0;
   out_7504121032138680857[263] = 1.0;
   out_7504121032138680857[264] = 0;
   out_7504121032138680857[265] = 0;
   out_7504121032138680857[266] = 0;
   out_7504121032138680857[267] = 0;
   out_7504121032138680857[268] = 0;
   out_7504121032138680857[269] = 0;
   out_7504121032138680857[270] = 0;
   out_7504121032138680857[271] = 0;
   out_7504121032138680857[272] = 0;
   out_7504121032138680857[273] = 0;
   out_7504121032138680857[274] = 0;
   out_7504121032138680857[275] = 0;
   out_7504121032138680857[276] = 0;
   out_7504121032138680857[277] = 0;
   out_7504121032138680857[278] = 0;
   out_7504121032138680857[279] = 0;
   out_7504121032138680857[280] = 0;
   out_7504121032138680857[281] = 0;
   out_7504121032138680857[282] = 0;
   out_7504121032138680857[283] = 0;
   out_7504121032138680857[284] = 0;
   out_7504121032138680857[285] = 1.0;
   out_7504121032138680857[286] = 0;
   out_7504121032138680857[287] = 0;
   out_7504121032138680857[288] = 0;
   out_7504121032138680857[289] = 0;
   out_7504121032138680857[290] = 0;
   out_7504121032138680857[291] = 0;
   out_7504121032138680857[292] = 0;
   out_7504121032138680857[293] = 0;
   out_7504121032138680857[294] = 0;
   out_7504121032138680857[295] = 0;
   out_7504121032138680857[296] = 0;
   out_7504121032138680857[297] = 0;
   out_7504121032138680857[298] = 0;
   out_7504121032138680857[299] = 0;
   out_7504121032138680857[300] = 0;
   out_7504121032138680857[301] = 0;
   out_7504121032138680857[302] = 0;
   out_7504121032138680857[303] = 0;
   out_7504121032138680857[304] = 0;
   out_7504121032138680857[305] = 0;
   out_7504121032138680857[306] = 0;
   out_7504121032138680857[307] = 1.0;
   out_7504121032138680857[308] = 0;
   out_7504121032138680857[309] = 0;
   out_7504121032138680857[310] = 0;
   out_7504121032138680857[311] = 0;
   out_7504121032138680857[312] = 0;
   out_7504121032138680857[313] = 0;
   out_7504121032138680857[314] = 0;
   out_7504121032138680857[315] = 0;
   out_7504121032138680857[316] = 0;
   out_7504121032138680857[317] = 0;
   out_7504121032138680857[318] = 0;
   out_7504121032138680857[319] = 0;
   out_7504121032138680857[320] = 0;
   out_7504121032138680857[321] = 0;
   out_7504121032138680857[322] = 0;
   out_7504121032138680857[323] = 0;
   out_7504121032138680857[324] = 0;
   out_7504121032138680857[325] = 0;
   out_7504121032138680857[326] = 0;
   out_7504121032138680857[327] = 0;
   out_7504121032138680857[328] = 0;
   out_7504121032138680857[329] = 1.0;
   out_7504121032138680857[330] = 0;
   out_7504121032138680857[331] = 0;
   out_7504121032138680857[332] = 0;
   out_7504121032138680857[333] = 0;
   out_7504121032138680857[334] = 0;
   out_7504121032138680857[335] = 0;
   out_7504121032138680857[336] = 0;
   out_7504121032138680857[337] = 0;
   out_7504121032138680857[338] = 0;
   out_7504121032138680857[339] = 0;
   out_7504121032138680857[340] = 0;
   out_7504121032138680857[341] = 0;
   out_7504121032138680857[342] = 0;
   out_7504121032138680857[343] = 0;
   out_7504121032138680857[344] = 0;
   out_7504121032138680857[345] = 0;
   out_7504121032138680857[346] = 0;
   out_7504121032138680857[347] = 0;
   out_7504121032138680857[348] = 0;
   out_7504121032138680857[349] = 0;
   out_7504121032138680857[350] = 0;
   out_7504121032138680857[351] = 1.0;
   out_7504121032138680857[352] = 0;
   out_7504121032138680857[353] = 0;
   out_7504121032138680857[354] = 0;
   out_7504121032138680857[355] = 0;
   out_7504121032138680857[356] = 0;
   out_7504121032138680857[357] = 0;
   out_7504121032138680857[358] = 0;
   out_7504121032138680857[359] = 0;
   out_7504121032138680857[360] = 0;
   out_7504121032138680857[361] = 0;
   out_7504121032138680857[362] = 0;
   out_7504121032138680857[363] = 0;
   out_7504121032138680857[364] = 0;
   out_7504121032138680857[365] = 0;
   out_7504121032138680857[366] = 0;
   out_7504121032138680857[367] = 0;
   out_7504121032138680857[368] = 0;
   out_7504121032138680857[369] = 0;
   out_7504121032138680857[370] = 0;
   out_7504121032138680857[371] = 0;
   out_7504121032138680857[372] = 0;
   out_7504121032138680857[373] = 1.0;
   out_7504121032138680857[374] = 0;
   out_7504121032138680857[375] = 0;
   out_7504121032138680857[376] = 0;
   out_7504121032138680857[377] = 0;
   out_7504121032138680857[378] = 0;
   out_7504121032138680857[379] = 0;
   out_7504121032138680857[380] = 0;
   out_7504121032138680857[381] = 0;
   out_7504121032138680857[382] = 0;
   out_7504121032138680857[383] = 0;
   out_7504121032138680857[384] = 0;
   out_7504121032138680857[385] = 0;
   out_7504121032138680857[386] = 0;
   out_7504121032138680857[387] = 0;
   out_7504121032138680857[388] = 0;
   out_7504121032138680857[389] = 0;
   out_7504121032138680857[390] = 0;
   out_7504121032138680857[391] = 0;
   out_7504121032138680857[392] = 0;
   out_7504121032138680857[393] = 0;
   out_7504121032138680857[394] = 0;
   out_7504121032138680857[395] = 1.0;
   out_7504121032138680857[396] = 0;
   out_7504121032138680857[397] = 0;
   out_7504121032138680857[398] = 0;
   out_7504121032138680857[399] = 0;
   out_7504121032138680857[400] = 0;
   out_7504121032138680857[401] = 0;
   out_7504121032138680857[402] = 0;
   out_7504121032138680857[403] = 0;
   out_7504121032138680857[404] = 0;
   out_7504121032138680857[405] = 0;
   out_7504121032138680857[406] = 0;
   out_7504121032138680857[407] = 0;
   out_7504121032138680857[408] = 0;
   out_7504121032138680857[409] = 0;
   out_7504121032138680857[410] = 0;
   out_7504121032138680857[411] = 0;
   out_7504121032138680857[412] = 0;
   out_7504121032138680857[413] = 0;
   out_7504121032138680857[414] = 0;
   out_7504121032138680857[415] = 0;
   out_7504121032138680857[416] = 0;
   out_7504121032138680857[417] = 1.0;
   out_7504121032138680857[418] = 0;
   out_7504121032138680857[419] = 0;
   out_7504121032138680857[420] = 0;
   out_7504121032138680857[421] = 0;
   out_7504121032138680857[422] = 0;
   out_7504121032138680857[423] = 0;
   out_7504121032138680857[424] = 0;
   out_7504121032138680857[425] = 0;
   out_7504121032138680857[426] = 0;
   out_7504121032138680857[427] = 0;
   out_7504121032138680857[428] = 0;
   out_7504121032138680857[429] = 0;
   out_7504121032138680857[430] = 0;
   out_7504121032138680857[431] = 0;
   out_7504121032138680857[432] = 0;
   out_7504121032138680857[433] = 0;
   out_7504121032138680857[434] = 0;
   out_7504121032138680857[435] = 0;
   out_7504121032138680857[436] = 0;
   out_7504121032138680857[437] = 0;
   out_7504121032138680857[438] = 0;
   out_7504121032138680857[439] = 1.0;
   out_7504121032138680857[440] = 0;
   out_7504121032138680857[441] = 0;
   out_7504121032138680857[442] = 0;
   out_7504121032138680857[443] = 0;
   out_7504121032138680857[444] = 0;
   out_7504121032138680857[445] = 0;
   out_7504121032138680857[446] = 0;
   out_7504121032138680857[447] = 0;
   out_7504121032138680857[448] = 0;
   out_7504121032138680857[449] = 0;
   out_7504121032138680857[450] = 0;
   out_7504121032138680857[451] = 0;
   out_7504121032138680857[452] = 0;
   out_7504121032138680857[453] = 0;
   out_7504121032138680857[454] = 0;
   out_7504121032138680857[455] = 0;
   out_7504121032138680857[456] = 0;
   out_7504121032138680857[457] = 0;
   out_7504121032138680857[458] = 0;
   out_7504121032138680857[459] = 0;
   out_7504121032138680857[460] = 0;
   out_7504121032138680857[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4646576867899475088) {
   out_4646576867899475088[0] = dt*state[7] + state[0];
   out_4646576867899475088[1] = dt*state[8] + state[1];
   out_4646576867899475088[2] = dt*state[9] + state[2];
   out_4646576867899475088[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4646576867899475088[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4646576867899475088[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4646576867899475088[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4646576867899475088[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4646576867899475088[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4646576867899475088[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4646576867899475088[10] = state[10];
   out_4646576867899475088[11] = state[11];
   out_4646576867899475088[12] = state[12];
   out_4646576867899475088[13] = state[13];
   out_4646576867899475088[14] = state[14];
   out_4646576867899475088[15] = state[15];
   out_4646576867899475088[16] = state[16];
   out_4646576867899475088[17] = state[17];
   out_4646576867899475088[18] = state[18];
   out_4646576867899475088[19] = state[19];
   out_4646576867899475088[20] = state[20];
   out_4646576867899475088[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5174316526860583237) {
   out_5174316526860583237[0] = 1;
   out_5174316526860583237[1] = 0;
   out_5174316526860583237[2] = 0;
   out_5174316526860583237[3] = 0;
   out_5174316526860583237[4] = 0;
   out_5174316526860583237[5] = 0;
   out_5174316526860583237[6] = dt;
   out_5174316526860583237[7] = 0;
   out_5174316526860583237[8] = 0;
   out_5174316526860583237[9] = 0;
   out_5174316526860583237[10] = 0;
   out_5174316526860583237[11] = 0;
   out_5174316526860583237[12] = 0;
   out_5174316526860583237[13] = 0;
   out_5174316526860583237[14] = 0;
   out_5174316526860583237[15] = 0;
   out_5174316526860583237[16] = 0;
   out_5174316526860583237[17] = 0;
   out_5174316526860583237[18] = 0;
   out_5174316526860583237[19] = 0;
   out_5174316526860583237[20] = 0;
   out_5174316526860583237[21] = 0;
   out_5174316526860583237[22] = 1;
   out_5174316526860583237[23] = 0;
   out_5174316526860583237[24] = 0;
   out_5174316526860583237[25] = 0;
   out_5174316526860583237[26] = 0;
   out_5174316526860583237[27] = 0;
   out_5174316526860583237[28] = dt;
   out_5174316526860583237[29] = 0;
   out_5174316526860583237[30] = 0;
   out_5174316526860583237[31] = 0;
   out_5174316526860583237[32] = 0;
   out_5174316526860583237[33] = 0;
   out_5174316526860583237[34] = 0;
   out_5174316526860583237[35] = 0;
   out_5174316526860583237[36] = 0;
   out_5174316526860583237[37] = 0;
   out_5174316526860583237[38] = 0;
   out_5174316526860583237[39] = 0;
   out_5174316526860583237[40] = 0;
   out_5174316526860583237[41] = 0;
   out_5174316526860583237[42] = 0;
   out_5174316526860583237[43] = 0;
   out_5174316526860583237[44] = 1;
   out_5174316526860583237[45] = 0;
   out_5174316526860583237[46] = 0;
   out_5174316526860583237[47] = 0;
   out_5174316526860583237[48] = 0;
   out_5174316526860583237[49] = 0;
   out_5174316526860583237[50] = dt;
   out_5174316526860583237[51] = 0;
   out_5174316526860583237[52] = 0;
   out_5174316526860583237[53] = 0;
   out_5174316526860583237[54] = 0;
   out_5174316526860583237[55] = 0;
   out_5174316526860583237[56] = 0;
   out_5174316526860583237[57] = 0;
   out_5174316526860583237[58] = 0;
   out_5174316526860583237[59] = 0;
   out_5174316526860583237[60] = 0;
   out_5174316526860583237[61] = 0;
   out_5174316526860583237[62] = 0;
   out_5174316526860583237[63] = 0;
   out_5174316526860583237[64] = 0;
   out_5174316526860583237[65] = 0;
   out_5174316526860583237[66] = 1;
   out_5174316526860583237[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5174316526860583237[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5174316526860583237[69] = 0;
   out_5174316526860583237[70] = 0;
   out_5174316526860583237[71] = 0;
   out_5174316526860583237[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5174316526860583237[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5174316526860583237[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5174316526860583237[75] = 0;
   out_5174316526860583237[76] = 0;
   out_5174316526860583237[77] = 0;
   out_5174316526860583237[78] = 0;
   out_5174316526860583237[79] = 0;
   out_5174316526860583237[80] = 0;
   out_5174316526860583237[81] = 0;
   out_5174316526860583237[82] = 0;
   out_5174316526860583237[83] = 0;
   out_5174316526860583237[84] = 0;
   out_5174316526860583237[85] = 0;
   out_5174316526860583237[86] = 0;
   out_5174316526860583237[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5174316526860583237[88] = 1;
   out_5174316526860583237[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5174316526860583237[90] = 0;
   out_5174316526860583237[91] = 0;
   out_5174316526860583237[92] = 0;
   out_5174316526860583237[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5174316526860583237[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5174316526860583237[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5174316526860583237[96] = 0;
   out_5174316526860583237[97] = 0;
   out_5174316526860583237[98] = 0;
   out_5174316526860583237[99] = 0;
   out_5174316526860583237[100] = 0;
   out_5174316526860583237[101] = 0;
   out_5174316526860583237[102] = 0;
   out_5174316526860583237[103] = 0;
   out_5174316526860583237[104] = 0;
   out_5174316526860583237[105] = 0;
   out_5174316526860583237[106] = 0;
   out_5174316526860583237[107] = 0;
   out_5174316526860583237[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5174316526860583237[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5174316526860583237[110] = 1;
   out_5174316526860583237[111] = 0;
   out_5174316526860583237[112] = 0;
   out_5174316526860583237[113] = 0;
   out_5174316526860583237[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5174316526860583237[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5174316526860583237[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5174316526860583237[117] = 0;
   out_5174316526860583237[118] = 0;
   out_5174316526860583237[119] = 0;
   out_5174316526860583237[120] = 0;
   out_5174316526860583237[121] = 0;
   out_5174316526860583237[122] = 0;
   out_5174316526860583237[123] = 0;
   out_5174316526860583237[124] = 0;
   out_5174316526860583237[125] = 0;
   out_5174316526860583237[126] = 0;
   out_5174316526860583237[127] = 0;
   out_5174316526860583237[128] = 0;
   out_5174316526860583237[129] = 0;
   out_5174316526860583237[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5174316526860583237[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5174316526860583237[132] = 1;
   out_5174316526860583237[133] = 0;
   out_5174316526860583237[134] = 0;
   out_5174316526860583237[135] = 0;
   out_5174316526860583237[136] = 0;
   out_5174316526860583237[137] = 0;
   out_5174316526860583237[138] = 0;
   out_5174316526860583237[139] = 0;
   out_5174316526860583237[140] = 0;
   out_5174316526860583237[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5174316526860583237[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5174316526860583237[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5174316526860583237[144] = 0;
   out_5174316526860583237[145] = 0;
   out_5174316526860583237[146] = 0;
   out_5174316526860583237[147] = 0;
   out_5174316526860583237[148] = 0;
   out_5174316526860583237[149] = 0;
   out_5174316526860583237[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5174316526860583237[151] = 0;
   out_5174316526860583237[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5174316526860583237[153] = 0;
   out_5174316526860583237[154] = 1;
   out_5174316526860583237[155] = 0;
   out_5174316526860583237[156] = 0;
   out_5174316526860583237[157] = 0;
   out_5174316526860583237[158] = 0;
   out_5174316526860583237[159] = 0;
   out_5174316526860583237[160] = 0;
   out_5174316526860583237[161] = 0;
   out_5174316526860583237[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5174316526860583237[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5174316526860583237[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5174316526860583237[165] = 0;
   out_5174316526860583237[166] = 0;
   out_5174316526860583237[167] = 0;
   out_5174316526860583237[168] = 0;
   out_5174316526860583237[169] = 0;
   out_5174316526860583237[170] = 0;
   out_5174316526860583237[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5174316526860583237[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5174316526860583237[173] = 0;
   out_5174316526860583237[174] = 0;
   out_5174316526860583237[175] = 0;
   out_5174316526860583237[176] = 1;
   out_5174316526860583237[177] = 0;
   out_5174316526860583237[178] = 0;
   out_5174316526860583237[179] = 0;
   out_5174316526860583237[180] = 0;
   out_5174316526860583237[181] = 0;
   out_5174316526860583237[182] = 0;
   out_5174316526860583237[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5174316526860583237[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5174316526860583237[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5174316526860583237[186] = 0;
   out_5174316526860583237[187] = 0;
   out_5174316526860583237[188] = 0;
   out_5174316526860583237[189] = 0;
   out_5174316526860583237[190] = 0;
   out_5174316526860583237[191] = 0;
   out_5174316526860583237[192] = 0;
   out_5174316526860583237[193] = 0;
   out_5174316526860583237[194] = 0;
   out_5174316526860583237[195] = 0;
   out_5174316526860583237[196] = 0;
   out_5174316526860583237[197] = 0;
   out_5174316526860583237[198] = 1;
   out_5174316526860583237[199] = 0;
   out_5174316526860583237[200] = 0;
   out_5174316526860583237[201] = 0;
   out_5174316526860583237[202] = 0;
   out_5174316526860583237[203] = 0;
   out_5174316526860583237[204] = 0;
   out_5174316526860583237[205] = 0;
   out_5174316526860583237[206] = 0;
   out_5174316526860583237[207] = 0;
   out_5174316526860583237[208] = 0;
   out_5174316526860583237[209] = 0;
   out_5174316526860583237[210] = 0;
   out_5174316526860583237[211] = 0;
   out_5174316526860583237[212] = 0;
   out_5174316526860583237[213] = 0;
   out_5174316526860583237[214] = 0;
   out_5174316526860583237[215] = 0;
   out_5174316526860583237[216] = 0;
   out_5174316526860583237[217] = 0;
   out_5174316526860583237[218] = 0;
   out_5174316526860583237[219] = 0;
   out_5174316526860583237[220] = 1;
   out_5174316526860583237[221] = 0;
   out_5174316526860583237[222] = 0;
   out_5174316526860583237[223] = 0;
   out_5174316526860583237[224] = 0;
   out_5174316526860583237[225] = 0;
   out_5174316526860583237[226] = 0;
   out_5174316526860583237[227] = 0;
   out_5174316526860583237[228] = 0;
   out_5174316526860583237[229] = 0;
   out_5174316526860583237[230] = 0;
   out_5174316526860583237[231] = 0;
   out_5174316526860583237[232] = 0;
   out_5174316526860583237[233] = 0;
   out_5174316526860583237[234] = 0;
   out_5174316526860583237[235] = 0;
   out_5174316526860583237[236] = 0;
   out_5174316526860583237[237] = 0;
   out_5174316526860583237[238] = 0;
   out_5174316526860583237[239] = 0;
   out_5174316526860583237[240] = 0;
   out_5174316526860583237[241] = 0;
   out_5174316526860583237[242] = 1;
   out_5174316526860583237[243] = 0;
   out_5174316526860583237[244] = 0;
   out_5174316526860583237[245] = 0;
   out_5174316526860583237[246] = 0;
   out_5174316526860583237[247] = 0;
   out_5174316526860583237[248] = 0;
   out_5174316526860583237[249] = 0;
   out_5174316526860583237[250] = 0;
   out_5174316526860583237[251] = 0;
   out_5174316526860583237[252] = 0;
   out_5174316526860583237[253] = 0;
   out_5174316526860583237[254] = 0;
   out_5174316526860583237[255] = 0;
   out_5174316526860583237[256] = 0;
   out_5174316526860583237[257] = 0;
   out_5174316526860583237[258] = 0;
   out_5174316526860583237[259] = 0;
   out_5174316526860583237[260] = 0;
   out_5174316526860583237[261] = 0;
   out_5174316526860583237[262] = 0;
   out_5174316526860583237[263] = 0;
   out_5174316526860583237[264] = 1;
   out_5174316526860583237[265] = 0;
   out_5174316526860583237[266] = 0;
   out_5174316526860583237[267] = 0;
   out_5174316526860583237[268] = 0;
   out_5174316526860583237[269] = 0;
   out_5174316526860583237[270] = 0;
   out_5174316526860583237[271] = 0;
   out_5174316526860583237[272] = 0;
   out_5174316526860583237[273] = 0;
   out_5174316526860583237[274] = 0;
   out_5174316526860583237[275] = 0;
   out_5174316526860583237[276] = 0;
   out_5174316526860583237[277] = 0;
   out_5174316526860583237[278] = 0;
   out_5174316526860583237[279] = 0;
   out_5174316526860583237[280] = 0;
   out_5174316526860583237[281] = 0;
   out_5174316526860583237[282] = 0;
   out_5174316526860583237[283] = 0;
   out_5174316526860583237[284] = 0;
   out_5174316526860583237[285] = 0;
   out_5174316526860583237[286] = 1;
   out_5174316526860583237[287] = 0;
   out_5174316526860583237[288] = 0;
   out_5174316526860583237[289] = 0;
   out_5174316526860583237[290] = 0;
   out_5174316526860583237[291] = 0;
   out_5174316526860583237[292] = 0;
   out_5174316526860583237[293] = 0;
   out_5174316526860583237[294] = 0;
   out_5174316526860583237[295] = 0;
   out_5174316526860583237[296] = 0;
   out_5174316526860583237[297] = 0;
   out_5174316526860583237[298] = 0;
   out_5174316526860583237[299] = 0;
   out_5174316526860583237[300] = 0;
   out_5174316526860583237[301] = 0;
   out_5174316526860583237[302] = 0;
   out_5174316526860583237[303] = 0;
   out_5174316526860583237[304] = 0;
   out_5174316526860583237[305] = 0;
   out_5174316526860583237[306] = 0;
   out_5174316526860583237[307] = 0;
   out_5174316526860583237[308] = 1;
   out_5174316526860583237[309] = 0;
   out_5174316526860583237[310] = 0;
   out_5174316526860583237[311] = 0;
   out_5174316526860583237[312] = 0;
   out_5174316526860583237[313] = 0;
   out_5174316526860583237[314] = 0;
   out_5174316526860583237[315] = 0;
   out_5174316526860583237[316] = 0;
   out_5174316526860583237[317] = 0;
   out_5174316526860583237[318] = 0;
   out_5174316526860583237[319] = 0;
   out_5174316526860583237[320] = 0;
   out_5174316526860583237[321] = 0;
   out_5174316526860583237[322] = 0;
   out_5174316526860583237[323] = 0;
   out_5174316526860583237[324] = 0;
   out_5174316526860583237[325] = 0;
   out_5174316526860583237[326] = 0;
   out_5174316526860583237[327] = 0;
   out_5174316526860583237[328] = 0;
   out_5174316526860583237[329] = 0;
   out_5174316526860583237[330] = 1;
   out_5174316526860583237[331] = 0;
   out_5174316526860583237[332] = 0;
   out_5174316526860583237[333] = 0;
   out_5174316526860583237[334] = 0;
   out_5174316526860583237[335] = 0;
   out_5174316526860583237[336] = 0;
   out_5174316526860583237[337] = 0;
   out_5174316526860583237[338] = 0;
   out_5174316526860583237[339] = 0;
   out_5174316526860583237[340] = 0;
   out_5174316526860583237[341] = 0;
   out_5174316526860583237[342] = 0;
   out_5174316526860583237[343] = 0;
   out_5174316526860583237[344] = 0;
   out_5174316526860583237[345] = 0;
   out_5174316526860583237[346] = 0;
   out_5174316526860583237[347] = 0;
   out_5174316526860583237[348] = 0;
   out_5174316526860583237[349] = 0;
   out_5174316526860583237[350] = 0;
   out_5174316526860583237[351] = 0;
   out_5174316526860583237[352] = 1;
   out_5174316526860583237[353] = 0;
   out_5174316526860583237[354] = 0;
   out_5174316526860583237[355] = 0;
   out_5174316526860583237[356] = 0;
   out_5174316526860583237[357] = 0;
   out_5174316526860583237[358] = 0;
   out_5174316526860583237[359] = 0;
   out_5174316526860583237[360] = 0;
   out_5174316526860583237[361] = 0;
   out_5174316526860583237[362] = 0;
   out_5174316526860583237[363] = 0;
   out_5174316526860583237[364] = 0;
   out_5174316526860583237[365] = 0;
   out_5174316526860583237[366] = 0;
   out_5174316526860583237[367] = 0;
   out_5174316526860583237[368] = 0;
   out_5174316526860583237[369] = 0;
   out_5174316526860583237[370] = 0;
   out_5174316526860583237[371] = 0;
   out_5174316526860583237[372] = 0;
   out_5174316526860583237[373] = 0;
   out_5174316526860583237[374] = 1;
   out_5174316526860583237[375] = 0;
   out_5174316526860583237[376] = 0;
   out_5174316526860583237[377] = 0;
   out_5174316526860583237[378] = 0;
   out_5174316526860583237[379] = 0;
   out_5174316526860583237[380] = 0;
   out_5174316526860583237[381] = 0;
   out_5174316526860583237[382] = 0;
   out_5174316526860583237[383] = 0;
   out_5174316526860583237[384] = 0;
   out_5174316526860583237[385] = 0;
   out_5174316526860583237[386] = 0;
   out_5174316526860583237[387] = 0;
   out_5174316526860583237[388] = 0;
   out_5174316526860583237[389] = 0;
   out_5174316526860583237[390] = 0;
   out_5174316526860583237[391] = 0;
   out_5174316526860583237[392] = 0;
   out_5174316526860583237[393] = 0;
   out_5174316526860583237[394] = 0;
   out_5174316526860583237[395] = 0;
   out_5174316526860583237[396] = 1;
   out_5174316526860583237[397] = 0;
   out_5174316526860583237[398] = 0;
   out_5174316526860583237[399] = 0;
   out_5174316526860583237[400] = 0;
   out_5174316526860583237[401] = 0;
   out_5174316526860583237[402] = 0;
   out_5174316526860583237[403] = 0;
   out_5174316526860583237[404] = 0;
   out_5174316526860583237[405] = 0;
   out_5174316526860583237[406] = 0;
   out_5174316526860583237[407] = 0;
   out_5174316526860583237[408] = 0;
   out_5174316526860583237[409] = 0;
   out_5174316526860583237[410] = 0;
   out_5174316526860583237[411] = 0;
   out_5174316526860583237[412] = 0;
   out_5174316526860583237[413] = 0;
   out_5174316526860583237[414] = 0;
   out_5174316526860583237[415] = 0;
   out_5174316526860583237[416] = 0;
   out_5174316526860583237[417] = 0;
   out_5174316526860583237[418] = 1;
   out_5174316526860583237[419] = 0;
   out_5174316526860583237[420] = 0;
   out_5174316526860583237[421] = 0;
   out_5174316526860583237[422] = 0;
   out_5174316526860583237[423] = 0;
   out_5174316526860583237[424] = 0;
   out_5174316526860583237[425] = 0;
   out_5174316526860583237[426] = 0;
   out_5174316526860583237[427] = 0;
   out_5174316526860583237[428] = 0;
   out_5174316526860583237[429] = 0;
   out_5174316526860583237[430] = 0;
   out_5174316526860583237[431] = 0;
   out_5174316526860583237[432] = 0;
   out_5174316526860583237[433] = 0;
   out_5174316526860583237[434] = 0;
   out_5174316526860583237[435] = 0;
   out_5174316526860583237[436] = 0;
   out_5174316526860583237[437] = 0;
   out_5174316526860583237[438] = 0;
   out_5174316526860583237[439] = 0;
   out_5174316526860583237[440] = 1;
}
void h_4(double *state, double *unused, double *out_9110616446286677265) {
   out_9110616446286677265[0] = state[10] + state[13];
   out_9110616446286677265[1] = state[11] + state[14];
   out_9110616446286677265[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2178751594556403216) {
   out_2178751594556403216[0] = 0;
   out_2178751594556403216[1] = 0;
   out_2178751594556403216[2] = 0;
   out_2178751594556403216[3] = 0;
   out_2178751594556403216[4] = 0;
   out_2178751594556403216[5] = 0;
   out_2178751594556403216[6] = 0;
   out_2178751594556403216[7] = 0;
   out_2178751594556403216[8] = 0;
   out_2178751594556403216[9] = 0;
   out_2178751594556403216[10] = 1;
   out_2178751594556403216[11] = 0;
   out_2178751594556403216[12] = 0;
   out_2178751594556403216[13] = 1;
   out_2178751594556403216[14] = 0;
   out_2178751594556403216[15] = 0;
   out_2178751594556403216[16] = 0;
   out_2178751594556403216[17] = 0;
   out_2178751594556403216[18] = 0;
   out_2178751594556403216[19] = 0;
   out_2178751594556403216[20] = 0;
   out_2178751594556403216[21] = 0;
   out_2178751594556403216[22] = 0;
   out_2178751594556403216[23] = 0;
   out_2178751594556403216[24] = 0;
   out_2178751594556403216[25] = 0;
   out_2178751594556403216[26] = 0;
   out_2178751594556403216[27] = 0;
   out_2178751594556403216[28] = 0;
   out_2178751594556403216[29] = 0;
   out_2178751594556403216[30] = 0;
   out_2178751594556403216[31] = 0;
   out_2178751594556403216[32] = 0;
   out_2178751594556403216[33] = 1;
   out_2178751594556403216[34] = 0;
   out_2178751594556403216[35] = 0;
   out_2178751594556403216[36] = 1;
   out_2178751594556403216[37] = 0;
   out_2178751594556403216[38] = 0;
   out_2178751594556403216[39] = 0;
   out_2178751594556403216[40] = 0;
   out_2178751594556403216[41] = 0;
   out_2178751594556403216[42] = 0;
   out_2178751594556403216[43] = 0;
   out_2178751594556403216[44] = 0;
   out_2178751594556403216[45] = 0;
   out_2178751594556403216[46] = 0;
   out_2178751594556403216[47] = 0;
   out_2178751594556403216[48] = 0;
   out_2178751594556403216[49] = 0;
   out_2178751594556403216[50] = 0;
   out_2178751594556403216[51] = 0;
   out_2178751594556403216[52] = 0;
   out_2178751594556403216[53] = 0;
   out_2178751594556403216[54] = 0;
   out_2178751594556403216[55] = 0;
   out_2178751594556403216[56] = 1;
   out_2178751594556403216[57] = 0;
   out_2178751594556403216[58] = 0;
   out_2178751594556403216[59] = 1;
   out_2178751594556403216[60] = 0;
   out_2178751594556403216[61] = 0;
   out_2178751594556403216[62] = 0;
   out_2178751594556403216[63] = 0;
   out_2178751594556403216[64] = 0;
   out_2178751594556403216[65] = 0;
}
void h_9(double *state, double *unused, double *out_8551277240316342594) {
   out_8551277240316342594[0] = state[10];
   out_8551277240316342594[1] = state[11];
   out_8551277240316342594[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2419941241185993861) {
   out_2419941241185993861[0] = 0;
   out_2419941241185993861[1] = 0;
   out_2419941241185993861[2] = 0;
   out_2419941241185993861[3] = 0;
   out_2419941241185993861[4] = 0;
   out_2419941241185993861[5] = 0;
   out_2419941241185993861[6] = 0;
   out_2419941241185993861[7] = 0;
   out_2419941241185993861[8] = 0;
   out_2419941241185993861[9] = 0;
   out_2419941241185993861[10] = 1;
   out_2419941241185993861[11] = 0;
   out_2419941241185993861[12] = 0;
   out_2419941241185993861[13] = 0;
   out_2419941241185993861[14] = 0;
   out_2419941241185993861[15] = 0;
   out_2419941241185993861[16] = 0;
   out_2419941241185993861[17] = 0;
   out_2419941241185993861[18] = 0;
   out_2419941241185993861[19] = 0;
   out_2419941241185993861[20] = 0;
   out_2419941241185993861[21] = 0;
   out_2419941241185993861[22] = 0;
   out_2419941241185993861[23] = 0;
   out_2419941241185993861[24] = 0;
   out_2419941241185993861[25] = 0;
   out_2419941241185993861[26] = 0;
   out_2419941241185993861[27] = 0;
   out_2419941241185993861[28] = 0;
   out_2419941241185993861[29] = 0;
   out_2419941241185993861[30] = 0;
   out_2419941241185993861[31] = 0;
   out_2419941241185993861[32] = 0;
   out_2419941241185993861[33] = 1;
   out_2419941241185993861[34] = 0;
   out_2419941241185993861[35] = 0;
   out_2419941241185993861[36] = 0;
   out_2419941241185993861[37] = 0;
   out_2419941241185993861[38] = 0;
   out_2419941241185993861[39] = 0;
   out_2419941241185993861[40] = 0;
   out_2419941241185993861[41] = 0;
   out_2419941241185993861[42] = 0;
   out_2419941241185993861[43] = 0;
   out_2419941241185993861[44] = 0;
   out_2419941241185993861[45] = 0;
   out_2419941241185993861[46] = 0;
   out_2419941241185993861[47] = 0;
   out_2419941241185993861[48] = 0;
   out_2419941241185993861[49] = 0;
   out_2419941241185993861[50] = 0;
   out_2419941241185993861[51] = 0;
   out_2419941241185993861[52] = 0;
   out_2419941241185993861[53] = 0;
   out_2419941241185993861[54] = 0;
   out_2419941241185993861[55] = 0;
   out_2419941241185993861[56] = 1;
   out_2419941241185993861[57] = 0;
   out_2419941241185993861[58] = 0;
   out_2419941241185993861[59] = 0;
   out_2419941241185993861[60] = 0;
   out_2419941241185993861[61] = 0;
   out_2419941241185993861[62] = 0;
   out_2419941241185993861[63] = 0;
   out_2419941241185993861[64] = 0;
   out_2419941241185993861[65] = 0;
}
void h_10(double *state, double *unused, double *out_4620945272970696394) {
   out_4620945272970696394[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4620945272970696394[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4620945272970696394[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2076156875284812434) {
   out_2076156875284812434[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2076156875284812434[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2076156875284812434[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2076156875284812434[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2076156875284812434[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2076156875284812434[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2076156875284812434[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2076156875284812434[7] = 0;
   out_2076156875284812434[8] = 0;
   out_2076156875284812434[9] = 0;
   out_2076156875284812434[10] = 0;
   out_2076156875284812434[11] = 0;
   out_2076156875284812434[12] = 0;
   out_2076156875284812434[13] = 0;
   out_2076156875284812434[14] = 0;
   out_2076156875284812434[15] = 0;
   out_2076156875284812434[16] = 1;
   out_2076156875284812434[17] = 0;
   out_2076156875284812434[18] = 0;
   out_2076156875284812434[19] = 1;
   out_2076156875284812434[20] = 0;
   out_2076156875284812434[21] = 0;
   out_2076156875284812434[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2076156875284812434[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2076156875284812434[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2076156875284812434[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2076156875284812434[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2076156875284812434[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2076156875284812434[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2076156875284812434[29] = 0;
   out_2076156875284812434[30] = 0;
   out_2076156875284812434[31] = 0;
   out_2076156875284812434[32] = 0;
   out_2076156875284812434[33] = 0;
   out_2076156875284812434[34] = 0;
   out_2076156875284812434[35] = 0;
   out_2076156875284812434[36] = 0;
   out_2076156875284812434[37] = 0;
   out_2076156875284812434[38] = 0;
   out_2076156875284812434[39] = 1;
   out_2076156875284812434[40] = 0;
   out_2076156875284812434[41] = 0;
   out_2076156875284812434[42] = 1;
   out_2076156875284812434[43] = 0;
   out_2076156875284812434[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2076156875284812434[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2076156875284812434[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2076156875284812434[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2076156875284812434[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2076156875284812434[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2076156875284812434[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2076156875284812434[51] = 0;
   out_2076156875284812434[52] = 0;
   out_2076156875284812434[53] = 0;
   out_2076156875284812434[54] = 0;
   out_2076156875284812434[55] = 0;
   out_2076156875284812434[56] = 0;
   out_2076156875284812434[57] = 0;
   out_2076156875284812434[58] = 0;
   out_2076156875284812434[59] = 0;
   out_2076156875284812434[60] = 0;
   out_2076156875284812434[61] = 0;
   out_2076156875284812434[62] = 1;
   out_2076156875284812434[63] = 0;
   out_2076156875284812434[64] = 0;
   out_2076156875284812434[65] = 1;
}
void h_12(double *state, double *unused, double *out_3174412120140823682) {
   out_3174412120140823682[0] = state[0];
   out_3174412120140823682[1] = state[1];
   out_3174412120140823682[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7198208002588365011) {
   out_7198208002588365011[0] = 1;
   out_7198208002588365011[1] = 0;
   out_7198208002588365011[2] = 0;
   out_7198208002588365011[3] = 0;
   out_7198208002588365011[4] = 0;
   out_7198208002588365011[5] = 0;
   out_7198208002588365011[6] = 0;
   out_7198208002588365011[7] = 0;
   out_7198208002588365011[8] = 0;
   out_7198208002588365011[9] = 0;
   out_7198208002588365011[10] = 0;
   out_7198208002588365011[11] = 0;
   out_7198208002588365011[12] = 0;
   out_7198208002588365011[13] = 0;
   out_7198208002588365011[14] = 0;
   out_7198208002588365011[15] = 0;
   out_7198208002588365011[16] = 0;
   out_7198208002588365011[17] = 0;
   out_7198208002588365011[18] = 0;
   out_7198208002588365011[19] = 0;
   out_7198208002588365011[20] = 0;
   out_7198208002588365011[21] = 0;
   out_7198208002588365011[22] = 0;
   out_7198208002588365011[23] = 1;
   out_7198208002588365011[24] = 0;
   out_7198208002588365011[25] = 0;
   out_7198208002588365011[26] = 0;
   out_7198208002588365011[27] = 0;
   out_7198208002588365011[28] = 0;
   out_7198208002588365011[29] = 0;
   out_7198208002588365011[30] = 0;
   out_7198208002588365011[31] = 0;
   out_7198208002588365011[32] = 0;
   out_7198208002588365011[33] = 0;
   out_7198208002588365011[34] = 0;
   out_7198208002588365011[35] = 0;
   out_7198208002588365011[36] = 0;
   out_7198208002588365011[37] = 0;
   out_7198208002588365011[38] = 0;
   out_7198208002588365011[39] = 0;
   out_7198208002588365011[40] = 0;
   out_7198208002588365011[41] = 0;
   out_7198208002588365011[42] = 0;
   out_7198208002588365011[43] = 0;
   out_7198208002588365011[44] = 0;
   out_7198208002588365011[45] = 0;
   out_7198208002588365011[46] = 1;
   out_7198208002588365011[47] = 0;
   out_7198208002588365011[48] = 0;
   out_7198208002588365011[49] = 0;
   out_7198208002588365011[50] = 0;
   out_7198208002588365011[51] = 0;
   out_7198208002588365011[52] = 0;
   out_7198208002588365011[53] = 0;
   out_7198208002588365011[54] = 0;
   out_7198208002588365011[55] = 0;
   out_7198208002588365011[56] = 0;
   out_7198208002588365011[57] = 0;
   out_7198208002588365011[58] = 0;
   out_7198208002588365011[59] = 0;
   out_7198208002588365011[60] = 0;
   out_7198208002588365011[61] = 0;
   out_7198208002588365011[62] = 0;
   out_7198208002588365011[63] = 0;
   out_7198208002588365011[64] = 0;
   out_7198208002588365011[65] = 0;
}
void h_31(double *state, double *unused, double *out_2255803214784134484) {
   out_2255803214784134484[0] = state[7];
   out_2255803214784134484[1] = state[8];
   out_2255803214784134484[2] = state[9];
}
void H_31(double *state, double *unused, double *out_8502973038796172896) {
   out_8502973038796172896[0] = 0;
   out_8502973038796172896[1] = 0;
   out_8502973038796172896[2] = 0;
   out_8502973038796172896[3] = 0;
   out_8502973038796172896[4] = 0;
   out_8502973038796172896[5] = 0;
   out_8502973038796172896[6] = 0;
   out_8502973038796172896[7] = 1;
   out_8502973038796172896[8] = 0;
   out_8502973038796172896[9] = 0;
   out_8502973038796172896[10] = 0;
   out_8502973038796172896[11] = 0;
   out_8502973038796172896[12] = 0;
   out_8502973038796172896[13] = 0;
   out_8502973038796172896[14] = 0;
   out_8502973038796172896[15] = 0;
   out_8502973038796172896[16] = 0;
   out_8502973038796172896[17] = 0;
   out_8502973038796172896[18] = 0;
   out_8502973038796172896[19] = 0;
   out_8502973038796172896[20] = 0;
   out_8502973038796172896[21] = 0;
   out_8502973038796172896[22] = 0;
   out_8502973038796172896[23] = 0;
   out_8502973038796172896[24] = 0;
   out_8502973038796172896[25] = 0;
   out_8502973038796172896[26] = 0;
   out_8502973038796172896[27] = 0;
   out_8502973038796172896[28] = 0;
   out_8502973038796172896[29] = 0;
   out_8502973038796172896[30] = 1;
   out_8502973038796172896[31] = 0;
   out_8502973038796172896[32] = 0;
   out_8502973038796172896[33] = 0;
   out_8502973038796172896[34] = 0;
   out_8502973038796172896[35] = 0;
   out_8502973038796172896[36] = 0;
   out_8502973038796172896[37] = 0;
   out_8502973038796172896[38] = 0;
   out_8502973038796172896[39] = 0;
   out_8502973038796172896[40] = 0;
   out_8502973038796172896[41] = 0;
   out_8502973038796172896[42] = 0;
   out_8502973038796172896[43] = 0;
   out_8502973038796172896[44] = 0;
   out_8502973038796172896[45] = 0;
   out_8502973038796172896[46] = 0;
   out_8502973038796172896[47] = 0;
   out_8502973038796172896[48] = 0;
   out_8502973038796172896[49] = 0;
   out_8502973038796172896[50] = 0;
   out_8502973038796172896[51] = 0;
   out_8502973038796172896[52] = 0;
   out_8502973038796172896[53] = 1;
   out_8502973038796172896[54] = 0;
   out_8502973038796172896[55] = 0;
   out_8502973038796172896[56] = 0;
   out_8502973038796172896[57] = 0;
   out_8502973038796172896[58] = 0;
   out_8502973038796172896[59] = 0;
   out_8502973038796172896[60] = 0;
   out_8502973038796172896[61] = 0;
   out_8502973038796172896[62] = 0;
   out_8502973038796172896[63] = 0;
   out_8502973038796172896[64] = 0;
   out_8502973038796172896[65] = 0;
}
void h_32(double *state, double *unused, double *out_4753541036473000575) {
   out_4753541036473000575[0] = state[3];
   out_4753541036473000575[1] = state[4];
   out_4753541036473000575[2] = state[5];
   out_4753541036473000575[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5719314874377755303) {
   out_5719314874377755303[0] = 0;
   out_5719314874377755303[1] = 0;
   out_5719314874377755303[2] = 0;
   out_5719314874377755303[3] = 1;
   out_5719314874377755303[4] = 0;
   out_5719314874377755303[5] = 0;
   out_5719314874377755303[6] = 0;
   out_5719314874377755303[7] = 0;
   out_5719314874377755303[8] = 0;
   out_5719314874377755303[9] = 0;
   out_5719314874377755303[10] = 0;
   out_5719314874377755303[11] = 0;
   out_5719314874377755303[12] = 0;
   out_5719314874377755303[13] = 0;
   out_5719314874377755303[14] = 0;
   out_5719314874377755303[15] = 0;
   out_5719314874377755303[16] = 0;
   out_5719314874377755303[17] = 0;
   out_5719314874377755303[18] = 0;
   out_5719314874377755303[19] = 0;
   out_5719314874377755303[20] = 0;
   out_5719314874377755303[21] = 0;
   out_5719314874377755303[22] = 0;
   out_5719314874377755303[23] = 0;
   out_5719314874377755303[24] = 0;
   out_5719314874377755303[25] = 0;
   out_5719314874377755303[26] = 1;
   out_5719314874377755303[27] = 0;
   out_5719314874377755303[28] = 0;
   out_5719314874377755303[29] = 0;
   out_5719314874377755303[30] = 0;
   out_5719314874377755303[31] = 0;
   out_5719314874377755303[32] = 0;
   out_5719314874377755303[33] = 0;
   out_5719314874377755303[34] = 0;
   out_5719314874377755303[35] = 0;
   out_5719314874377755303[36] = 0;
   out_5719314874377755303[37] = 0;
   out_5719314874377755303[38] = 0;
   out_5719314874377755303[39] = 0;
   out_5719314874377755303[40] = 0;
   out_5719314874377755303[41] = 0;
   out_5719314874377755303[42] = 0;
   out_5719314874377755303[43] = 0;
   out_5719314874377755303[44] = 0;
   out_5719314874377755303[45] = 0;
   out_5719314874377755303[46] = 0;
   out_5719314874377755303[47] = 0;
   out_5719314874377755303[48] = 0;
   out_5719314874377755303[49] = 1;
   out_5719314874377755303[50] = 0;
   out_5719314874377755303[51] = 0;
   out_5719314874377755303[52] = 0;
   out_5719314874377755303[53] = 0;
   out_5719314874377755303[54] = 0;
   out_5719314874377755303[55] = 0;
   out_5719314874377755303[56] = 0;
   out_5719314874377755303[57] = 0;
   out_5719314874377755303[58] = 0;
   out_5719314874377755303[59] = 0;
   out_5719314874377755303[60] = 0;
   out_5719314874377755303[61] = 0;
   out_5719314874377755303[62] = 0;
   out_5719314874377755303[63] = 0;
   out_5719314874377755303[64] = 0;
   out_5719314874377755303[65] = 0;
   out_5719314874377755303[66] = 0;
   out_5719314874377755303[67] = 0;
   out_5719314874377755303[68] = 0;
   out_5719314874377755303[69] = 0;
   out_5719314874377755303[70] = 0;
   out_5719314874377755303[71] = 0;
   out_5719314874377755303[72] = 1;
   out_5719314874377755303[73] = 0;
   out_5719314874377755303[74] = 0;
   out_5719314874377755303[75] = 0;
   out_5719314874377755303[76] = 0;
   out_5719314874377755303[77] = 0;
   out_5719314874377755303[78] = 0;
   out_5719314874377755303[79] = 0;
   out_5719314874377755303[80] = 0;
   out_5719314874377755303[81] = 0;
   out_5719314874377755303[82] = 0;
   out_5719314874377755303[83] = 0;
   out_5719314874377755303[84] = 0;
   out_5719314874377755303[85] = 0;
   out_5719314874377755303[86] = 0;
   out_5719314874377755303[87] = 0;
}
void h_13(double *state, double *unused, double *out_5314515647160870884) {
   out_5314515647160870884[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5314515647160870884[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5314515647160870884[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2793196039033508332) {
   out_2793196039033508332[0] = 0;
   out_2793196039033508332[1] = 0;
   out_2793196039033508332[2] = 0;
   out_2793196039033508332[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2793196039033508332[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2793196039033508332[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2793196039033508332[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2793196039033508332[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2793196039033508332[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2793196039033508332[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2793196039033508332[10] = 0;
   out_2793196039033508332[11] = 0;
   out_2793196039033508332[12] = 0;
   out_2793196039033508332[13] = 0;
   out_2793196039033508332[14] = 0;
   out_2793196039033508332[15] = 0;
   out_2793196039033508332[16] = 0;
   out_2793196039033508332[17] = 0;
   out_2793196039033508332[18] = 0;
   out_2793196039033508332[19] = 0;
   out_2793196039033508332[20] = 0;
   out_2793196039033508332[21] = 0;
   out_2793196039033508332[22] = 0;
   out_2793196039033508332[23] = 0;
   out_2793196039033508332[24] = 0;
   out_2793196039033508332[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2793196039033508332[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2793196039033508332[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2793196039033508332[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2793196039033508332[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2793196039033508332[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2793196039033508332[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2793196039033508332[32] = 0;
   out_2793196039033508332[33] = 0;
   out_2793196039033508332[34] = 0;
   out_2793196039033508332[35] = 0;
   out_2793196039033508332[36] = 0;
   out_2793196039033508332[37] = 0;
   out_2793196039033508332[38] = 0;
   out_2793196039033508332[39] = 0;
   out_2793196039033508332[40] = 0;
   out_2793196039033508332[41] = 0;
   out_2793196039033508332[42] = 0;
   out_2793196039033508332[43] = 0;
   out_2793196039033508332[44] = 0;
   out_2793196039033508332[45] = 0;
   out_2793196039033508332[46] = 0;
   out_2793196039033508332[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2793196039033508332[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2793196039033508332[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2793196039033508332[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2793196039033508332[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2793196039033508332[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2793196039033508332[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2793196039033508332[54] = 0;
   out_2793196039033508332[55] = 0;
   out_2793196039033508332[56] = 0;
   out_2793196039033508332[57] = 0;
   out_2793196039033508332[58] = 0;
   out_2793196039033508332[59] = 0;
   out_2793196039033508332[60] = 0;
   out_2793196039033508332[61] = 0;
   out_2793196039033508332[62] = 0;
   out_2793196039033508332[63] = 0;
   out_2793196039033508332[64] = 0;
   out_2793196039033508332[65] = 0;
}
void h_14(double *state, double *unused, double *out_8551277240316342594) {
   out_8551277240316342594[0] = state[10];
   out_8551277240316342594[1] = state[11];
   out_8551277240316342594[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2419941241185993861) {
   out_2419941241185993861[0] = 0;
   out_2419941241185993861[1] = 0;
   out_2419941241185993861[2] = 0;
   out_2419941241185993861[3] = 0;
   out_2419941241185993861[4] = 0;
   out_2419941241185993861[5] = 0;
   out_2419941241185993861[6] = 0;
   out_2419941241185993861[7] = 0;
   out_2419941241185993861[8] = 0;
   out_2419941241185993861[9] = 0;
   out_2419941241185993861[10] = 1;
   out_2419941241185993861[11] = 0;
   out_2419941241185993861[12] = 0;
   out_2419941241185993861[13] = 0;
   out_2419941241185993861[14] = 0;
   out_2419941241185993861[15] = 0;
   out_2419941241185993861[16] = 0;
   out_2419941241185993861[17] = 0;
   out_2419941241185993861[18] = 0;
   out_2419941241185993861[19] = 0;
   out_2419941241185993861[20] = 0;
   out_2419941241185993861[21] = 0;
   out_2419941241185993861[22] = 0;
   out_2419941241185993861[23] = 0;
   out_2419941241185993861[24] = 0;
   out_2419941241185993861[25] = 0;
   out_2419941241185993861[26] = 0;
   out_2419941241185993861[27] = 0;
   out_2419941241185993861[28] = 0;
   out_2419941241185993861[29] = 0;
   out_2419941241185993861[30] = 0;
   out_2419941241185993861[31] = 0;
   out_2419941241185993861[32] = 0;
   out_2419941241185993861[33] = 1;
   out_2419941241185993861[34] = 0;
   out_2419941241185993861[35] = 0;
   out_2419941241185993861[36] = 0;
   out_2419941241185993861[37] = 0;
   out_2419941241185993861[38] = 0;
   out_2419941241185993861[39] = 0;
   out_2419941241185993861[40] = 0;
   out_2419941241185993861[41] = 0;
   out_2419941241185993861[42] = 0;
   out_2419941241185993861[43] = 0;
   out_2419941241185993861[44] = 0;
   out_2419941241185993861[45] = 0;
   out_2419941241185993861[46] = 0;
   out_2419941241185993861[47] = 0;
   out_2419941241185993861[48] = 0;
   out_2419941241185993861[49] = 0;
   out_2419941241185993861[50] = 0;
   out_2419941241185993861[51] = 0;
   out_2419941241185993861[52] = 0;
   out_2419941241185993861[53] = 0;
   out_2419941241185993861[54] = 0;
   out_2419941241185993861[55] = 0;
   out_2419941241185993861[56] = 1;
   out_2419941241185993861[57] = 0;
   out_2419941241185993861[58] = 0;
   out_2419941241185993861[59] = 0;
   out_2419941241185993861[60] = 0;
   out_2419941241185993861[61] = 0;
   out_2419941241185993861[62] = 0;
   out_2419941241185993861[63] = 0;
   out_2419941241185993861[64] = 0;
   out_2419941241185993861[65] = 0;
}
void h_33(double *state, double *unused, double *out_3196238603845286244) {
   out_3196238603845286244[0] = state[16];
   out_3196238603845286244[1] = state[17];
   out_3196238603845286244[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5352416034157315292) {
   out_5352416034157315292[0] = 0;
   out_5352416034157315292[1] = 0;
   out_5352416034157315292[2] = 0;
   out_5352416034157315292[3] = 0;
   out_5352416034157315292[4] = 0;
   out_5352416034157315292[5] = 0;
   out_5352416034157315292[6] = 0;
   out_5352416034157315292[7] = 0;
   out_5352416034157315292[8] = 0;
   out_5352416034157315292[9] = 0;
   out_5352416034157315292[10] = 0;
   out_5352416034157315292[11] = 0;
   out_5352416034157315292[12] = 0;
   out_5352416034157315292[13] = 0;
   out_5352416034157315292[14] = 0;
   out_5352416034157315292[15] = 0;
   out_5352416034157315292[16] = 1;
   out_5352416034157315292[17] = 0;
   out_5352416034157315292[18] = 0;
   out_5352416034157315292[19] = 0;
   out_5352416034157315292[20] = 0;
   out_5352416034157315292[21] = 0;
   out_5352416034157315292[22] = 0;
   out_5352416034157315292[23] = 0;
   out_5352416034157315292[24] = 0;
   out_5352416034157315292[25] = 0;
   out_5352416034157315292[26] = 0;
   out_5352416034157315292[27] = 0;
   out_5352416034157315292[28] = 0;
   out_5352416034157315292[29] = 0;
   out_5352416034157315292[30] = 0;
   out_5352416034157315292[31] = 0;
   out_5352416034157315292[32] = 0;
   out_5352416034157315292[33] = 0;
   out_5352416034157315292[34] = 0;
   out_5352416034157315292[35] = 0;
   out_5352416034157315292[36] = 0;
   out_5352416034157315292[37] = 0;
   out_5352416034157315292[38] = 0;
   out_5352416034157315292[39] = 1;
   out_5352416034157315292[40] = 0;
   out_5352416034157315292[41] = 0;
   out_5352416034157315292[42] = 0;
   out_5352416034157315292[43] = 0;
   out_5352416034157315292[44] = 0;
   out_5352416034157315292[45] = 0;
   out_5352416034157315292[46] = 0;
   out_5352416034157315292[47] = 0;
   out_5352416034157315292[48] = 0;
   out_5352416034157315292[49] = 0;
   out_5352416034157315292[50] = 0;
   out_5352416034157315292[51] = 0;
   out_5352416034157315292[52] = 0;
   out_5352416034157315292[53] = 0;
   out_5352416034157315292[54] = 0;
   out_5352416034157315292[55] = 0;
   out_5352416034157315292[56] = 0;
   out_5352416034157315292[57] = 0;
   out_5352416034157315292[58] = 0;
   out_5352416034157315292[59] = 0;
   out_5352416034157315292[60] = 0;
   out_5352416034157315292[61] = 0;
   out_5352416034157315292[62] = 1;
   out_5352416034157315292[63] = 0;
   out_5352416034157315292[64] = 0;
   out_5352416034157315292[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1948723160519481493) {
  H(in_vec, out_1948723160519481493);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1326617294892026553) {
  err_fun(nom_x, delta_x, out_1326617294892026553);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4209877855577787445) {
  inv_err_fun(nom_x, true_x, out_4209877855577787445);
}
void live_H_mod_fun(double *state, double *out_7504121032138680857) {
  H_mod_fun(state, out_7504121032138680857);
}
void live_f_fun(double *state, double dt, double *out_4646576867899475088) {
  f_fun(state,  dt, out_4646576867899475088);
}
void live_F_fun(double *state, double dt, double *out_5174316526860583237) {
  F_fun(state,  dt, out_5174316526860583237);
}
void live_h_4(double *state, double *unused, double *out_9110616446286677265) {
  h_4(state, unused, out_9110616446286677265);
}
void live_H_4(double *state, double *unused, double *out_2178751594556403216) {
  H_4(state, unused, out_2178751594556403216);
}
void live_h_9(double *state, double *unused, double *out_8551277240316342594) {
  h_9(state, unused, out_8551277240316342594);
}
void live_H_9(double *state, double *unused, double *out_2419941241185993861) {
  H_9(state, unused, out_2419941241185993861);
}
void live_h_10(double *state, double *unused, double *out_4620945272970696394) {
  h_10(state, unused, out_4620945272970696394);
}
void live_H_10(double *state, double *unused, double *out_2076156875284812434) {
  H_10(state, unused, out_2076156875284812434);
}
void live_h_12(double *state, double *unused, double *out_3174412120140823682) {
  h_12(state, unused, out_3174412120140823682);
}
void live_H_12(double *state, double *unused, double *out_7198208002588365011) {
  H_12(state, unused, out_7198208002588365011);
}
void live_h_31(double *state, double *unused, double *out_2255803214784134484) {
  h_31(state, unused, out_2255803214784134484);
}
void live_H_31(double *state, double *unused, double *out_8502973038796172896) {
  H_31(state, unused, out_8502973038796172896);
}
void live_h_32(double *state, double *unused, double *out_4753541036473000575) {
  h_32(state, unused, out_4753541036473000575);
}
void live_H_32(double *state, double *unused, double *out_5719314874377755303) {
  H_32(state, unused, out_5719314874377755303);
}
void live_h_13(double *state, double *unused, double *out_5314515647160870884) {
  h_13(state, unused, out_5314515647160870884);
}
void live_H_13(double *state, double *unused, double *out_2793196039033508332) {
  H_13(state, unused, out_2793196039033508332);
}
void live_h_14(double *state, double *unused, double *out_8551277240316342594) {
  h_14(state, unused, out_8551277240316342594);
}
void live_H_14(double *state, double *unused, double *out_2419941241185993861) {
  H_14(state, unused, out_2419941241185993861);
}
void live_h_33(double *state, double *unused, double *out_3196238603845286244) {
  h_33(state, unused, out_3196238603845286244);
}
void live_H_33(double *state, double *unused, double *out_5352416034157315292) {
  H_33(state, unused, out_5352416034157315292);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
